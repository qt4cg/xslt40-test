<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          name="error">
   <description>
                Tests error conditions. 
                This test set should include a test for every error code (however, coverage of new XSLT 3.0 errors is incomplete).
            </description>
  
   <environment name="error001">
      <source role=".">
         <content><![CDATA[<doc>
  <element attribute="3"/>
</doc>]]></content>
      </source>
   </environment>
     
   <environment name="error001a">
      <source role=".">
         <content><![CDATA[<doc/>]]></content>
      </source>
   </environment>
   
   <environment name="error002">
      <package file="error-base-002.xsl" role="secondary" 
               uri="http://www.w3.org/xslt30tests/error-base-002" package-version="1.0.0"/>
   </environment>
   
   <environment name="error003">
      <package file="error-base-002.xsl" role="secondary" 
               uri="http://www.w3.org/xslt30tests/error-base-002" package-version="1.0.0"/>
      <package file="error-base-003.xsl" role="secondary" 
               uri="http://www.w3.org/xslt30tests/error-base-003" package-version="1.0.0"/>         
   </environment>
   
   <environment name="error004">
      <package file="error-base-004.xsl" role="secondary" 
               uri="http://www.w3.org/xslt30tests/error-base-004" package-version="1.0.0"/>
   </environment>
   
   <environment name="error005">
      <package file="error-base-005.xsl" role="secondary" 
               uri="http://www.w3.org/xslt30tests/error-base-005" package-version="1.0.0"/>
   </environment>
   
   <environment name="error152">
      <source role=".">
         <content><![CDATA[ 
                        
<doc>
    <item val="1"/>
    <item val="2"/>
    <item val="3"/>
    <item val="4"/>
    <item val="5"/>                
</doc>]]></content>
      </source>
   </environment>
   <environment name="error214">
      <source role=".">
         <content><![CDATA[<t04>
  <a id="a" code="1" value="10"/>
  <a id="b" code="2" value="20"/>
  <a id="c" code="2" value="30"/>
  <a id="d" code="1" value="40"/>
</t04>]]></content>
      </source>
   </environment>

   <test-case name="error-0010a">
      <description>Error: &lt;xsl:param&gt; must come first.
Was error-code-018.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010a.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010b">
      <description>Error: xsl:stylesheet no version att.
Was error-code-035.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010b.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010c">
      <description>Error: xsl:apply-imports top level.
Was error-code-040.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010c.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010d">
      <description>Error: xsl:apply-imports - xsl:sort not allowed here.
Was error-code-042.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010d.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010e">
      <description>Error: xsl:apply-imports - xsl:fallback not allowed here.
Was error-code-043.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010e.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010f">
      <description>Error: xsl:apply-templates misplaced xsl:text.
Was error-code-047.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010f.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010g">
      <description>Error: xsl:apply-templates (top level).
Was error-code-048.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010g.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010h">
      <description>Error: xsl:call-template misplaced xsl:sort.
Was error-code-051.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010h.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010i">
      <description>Error: xsl:choose.
Was error-code-053.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010i.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010j">
      <description>Error: xsl:choose.
Was error-code-054.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010j.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0090"/>
            <error code="XTSE0010"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0010k">
      <description>Error: xsl:choose.
Was error-code-055.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010k.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010l">
      <description>Error: xsl:choose.
Was error-code-056.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010l.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010m">
      <description>Error: xsl:choose.
Was error-code-057.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010m.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010n">
      <description>Error: xsl:choose.
Was error-code-058.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010n.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010o">
      <description>Error: xsl:choose.
Was error-code-059.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010o.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010p">
      <description>Error: xsl:decimal-format (not top level).
Was error-code-062.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010p.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010q">
      <description>Error: xsl:attribute-set - no name.
Was error-code-074.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010q.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010r">
      <description>Error: xsl:attribute-set - bad content.
Was error-code-076.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010r.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010s">
      <description>Error: xsl:attribute-set - bad content.
Was error-code-077.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010s.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010t">
      <description>Error: xsl:attribute-set - bad content.
Was error-code-078.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010t.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010u">
      <description>Error: xsl:key - no match attribute.
Was error-code-084.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010u.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010v">
      <description>Error: xsl:key - not top-level.
Was error-code-088.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010v.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010w">
      <description>Error: xsl:include - no href.
Was error-code-089.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010w.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0090"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0010x">
      <description>Error: xsl:include - not top-level.
Was error-code-093.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2017-02-21" change="different included module, to prevent spurious errors"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010x.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0170"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0010y">
      <description>Error: xsl:import - no href.
Was error-code-098.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010y.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0090"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0010z">
      <description>Error: xsl:import - not top-level.
Was error-code-102.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2017-02-21" change="different imported module, to prevent spurious errors"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010z.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0190"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0010aa">
      <description>Error: xsl:template - not top level.
Was error-code-111.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010aa.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ab">
      <description>Error: xsl:template - bad content.
Was error-code-116.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ab.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ac">
      <description>Error: xsl:template - bad content.
Was error-code-117.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ac.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ad">
      <description>Error: xsl:call-template - omitted template name.
Was error-code-122.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ad.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ae">
      <description>Error: xsl:call-template - extra attribute.
Was error-code-123.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ae.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0090"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0010af">
      <description>Error: xsl:call-template - must be in a template body.
Was error-code-124.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010af.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ag">
      <description>Error: xsl:call-template - bad content.
Was error-code-125.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ag.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ah">
      <description>Error: xsl:call-template - bad content.
Was error-code-128.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ah.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ai">
      <description>Error: xsl:call-template - bad content.
Was error-code-129.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ai.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010aj">
      <description>Error: xsl:apply-templates - bad content.
Was error-code-132.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010aj.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ak">
      <description>Error: xsl:apply-templates - top-level.
Was error-code-135.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ak.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010al">
      <description>Error: xsl:for-each - xsl:sort must come first.
Was error-code-137.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010al.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010am">
      <description>Error: xsl:with-param - misspelt.
Was error-code-138.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010am.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010an">
      <description>Error: xsl:variable - no name.
Was error-code-140.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010an.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ao">
      <description>Error: xsl:param - wrong position.
Was error-code-142.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ao.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ap">
      <description>Error: xsl:param - wrong position.
Was error-code-143.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ap.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010aq">
      <description>Error: xsl:strip-space with misspelled attribute.
Was error-code-148.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010aq.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0090"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0010ar">
      <description>Error: invliad top-level XSLT element.
Was error-code-151.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ar.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010as">
      <description>Test validation when version matches supported version. This stylesheet should flag an error..
Was error-code-152.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010as.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010at">
      <description>Test validation when version is lower than supported version. This stylesheet should flag an error..
Was error-code-153.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010at.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010au">
      <description>BUG: 5.4.1/008 DESCRIPTION: No error is reported if xsl:text or xsl:value-of is used at the top level of the stylesheet..
Was error-code-154.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010au.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010av">
      <description>test for disabling output escaping in nested xsl:text now an error, XSLT 2.0 no longer allows nested xsl:text.
Was error-code-166.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="disabling_output_escaping"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010av.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010aw">
      <description>xsl:stylesheet not at top level.
Was error-code-174.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010aw.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ax">
      <description>unknown top-level element in XSLT namespace.
Was error-code-175.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ax.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ay">
      <description>variable declared as child of xsl:apply-imports.
Was error-code-176.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ay.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010az">
      <description>Generate error XTSE0010.
Was error-code-199.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010az.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010ba">
      <description>xsl:stylesheet element in wrong position.
Was error-code-200.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010ba.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0010bb">
      <description>Generate error XTSE0010 (Note: was XTDE1450 in an earlier draft specification).
Was error-code-377.
It is a static error if an
                     XSLT-defined element is used in a context where it is not permitted, if a
                        required attribute is omitted, or if the content of the
                     element does not correspond to the content that is allowed for the element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0010bb.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>

   <test-case name="error-0020a">
      <description>Error: xsl:decimal-format.
Was error-code-060.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020a.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020b">
      <description>Error: xsl:decimal-format.
Was error-code-064.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020b.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020c">
      <description>Error: xsl:attribute-set - bad name.
Was error-code-072.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020c.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020d">
      <description>Error: xsl:key - bad key name.
Was error-code-083.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020d.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020e">
      <description>Error: xsl:template - bad name.
Was error-code-109.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020e.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020f">
      <description>Error: xsl:call-template - bad template name.
Was error-code-119.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020f.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020g">
      <description>Error: xsl:apply-templates - bad mode.
Was error-code-131.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020g.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020h">
      <description>Error: xsl:variable - bad name.
Was error-code-136.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020h.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020i">
      <description>tunnel='yes' not allowed on a stylesheet parameter.
Was error-code-188.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020i.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020j">
      <description>tunnel='yes' not allowed on a function parameter.
Was error-code-189.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020j.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0020k">
      <description>Generate error XTSE0020.
Was error-code-201.
It is a static error if an
                           attribute (other than an attribute written using curly brackets in a
                           position where an attribute
                              value template is permitted) contains a value that is not
                           one of the permitted values for that attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0020k.xsl"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-0030a">
      <description>Generate error XTDE0030.
Was error-code-202.
It is a non-recoverable dynamic
                              error if the effective
                              value of an attribute written using curly brackets, in a
                           position where an attribute
                              value template is permitted, is a value that is not one of
                           the permitted values for that attribute. If the processor is able to
                           detect the error statically (for example, when any XPath expressions
                           within the curly brackets can be evaluated statically), then the
                           processor may optionally signal this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0030a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0030"/>
      </result>
   </test-case>

   <test-case name="error-0040a">
      <description>Generate error XTDE0040.
Was error-code-409.
It is a non-recoverable dynamic
                        error if the invocation of the stylesheet specifies a template name that does not match the
                        expanded QName of a named
                     template defined in the stylesheet.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0040a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0040"/>
      </result>
   </test-case>

   <test-case name="error-0041a">
      <description>Error: It is a dynamic error if the invocation of the stylesheet specifies a function name and arity that does not match the
                        expanded QName and arity of a named 
                        stylesheet function defined in the stylesheet,
                     whose visibility is public or final.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="John Lumley" on="2014-09-05" change="Use initial-function"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0041a.xsl"/>
         <!--<initial-template name="main"/>-->
         <initial-function xmlns:hms="Nonesuch" name="hms:noSuchFunction"/>
      </test>
      <result>
         <error code="XTDE0041"/>
      </result>
   </test-case>

   <test-case name="error-0044a">
      <description>Error: It is a dynamic
                        error if the invocation of the stylesheet specifies an initial mode and if no initial match selection 
                                 is supplied (either explicitly, or
                        defaulted to the global context item).</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="John Lumley" on="2014-09-05" change="Use initial (unnamed) mode"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="initial-mode/@name is now required, specified #default"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0044a.xsl"/>
         <initial-mode name="#default"/>
      </test>
      <result>
         <error code="XTDE0044"/>
      </result>
   </test-case>
   
   <test-case name="error-0044aa">
      <description>Variant of previous, specify mode=#unnamed explicitly
         Error: It is a dynamic
                        error if the invocation of the stylesheet specifies an initial mode and if no initial match selection 
                                 is supplied (either explicitly, or
                        defaulted to the global context item).</description>
      <created by="Abel Braaksma" on="2014-10-21"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0044a.xsl"/>
         <initial-mode name="#unnamed"/>
      </test>
      <result>
         <error code="XTDE0044"/>
      </result>
   </test-case>

   <test-case name="error-0044ab">
      <description>Variant of previous, specify mode=non-existing explicitly
         Error: It is a dynamic
                        error if the invocation of the stylesheet specifies an initial mode and if no initial match selection 
                                 is supplied (either explicitly, or
                        defaulted to the global context item).</description>
      <created by="Abel Braaksma" on="2014-10-21"/>
      <modified by="Michael Kay" on="2017-02-21" change="add alternative error code"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0044a.xsl"/>
         <initial-mode name="non-existing"/>
      </test>
      <result>
         <any-of>
            <error code="XTDE0044"/>
            <error code="XTDE0045"/>
         </any-of>
      </result>
   </test-case>
   
   <test-case name="error-0044ac">
      <description>Variant of previous, specify mode=existing-mode explicitly
         Error: It is a dynamic
                        error if the invocation of the stylesheet specifies an initial mode and if no initial match selection 
                                 is supplied (either explicitly, or
                        defaulted to the global context item).</description>
      <created by="Abel Braaksma" on="2014-10-21"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0044a.xsl"/>
         <initial-mode name="aMode"/>
      </test>
      <result>
         <error code="XTDE0044"/>
      </result>
   </test-case>

   <test-case name="error-0045a">
      <description>Error: It is a non-recoverable dynamic
                        error if the invocation of the stylesheet specifies an initial mode (other than the default mode) that does not match the
                        expanded QName in the
                        mode attribute of any template defined in the stylesheet.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0045a.xsl"/>
         <initial-mode name="non-existent-mode"/>
      </test>
      <result>
         <error code="XTDE0045"/>
      </result>
   </test-case>

   <test-case name="error-0045aa">
      <description>Tests that the following error DOES NOT occur when the initial mode is explicitly set to #unnamed
         
         Error: It is a non-recoverable dynamic
                        error if the invocation of the stylesheet specifies an initial mode (other than the default mode) that does not match the
                        expanded QName in the
                        mode attribute of any template defined in the stylesheet.</description>
      <created by="Abel Braaksma" on="2014-10-21"/>
      <modified by="Michael Kay" on="2015-08-11" change="The transformation produces an empty document, not an empty sequence"/>
      <environment ref="error001a"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0045a.xsl"/>
         <initial-mode name="#unnamed"/>
      </test>
      <result>
         <all-of>
           <assert-string-value/>
           <assert>not(/node())</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="error-0045ab">
      <description>Tests that the following error DOES NOT occur when the initial mode is explicitly set to #default and there is no
         other default mode specified on xsl:stylesheet or xsl:package.
         
         Error: It is a non-recoverable dynamic
                        error if the invocation of the stylesheet specifies an initial mode (other than the default mode) that does not match the
                        expanded QName in the
                        mode attribute of any template defined in the stylesheet.</description>
      <created by="Abel Braaksma" on="2014-10-21"/>
      <modified by="Michael Kay" on="2015-08-11" change="The transformation produces an empty document, not an empty sequence"/>
      <environment ref="error001a"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0045a.xsl"/>
         <initial-mode name="#default"/>
      </test>
      <result>
         <all-of>
           <assert-string-value/>
           <assert>not(/node())</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="error-0045b">
      <description>Tests showing that XTDE0045 should *not* be raised when a default mode is not declared (but XTSE3085 is)
         
         [ERR XTSE3085] It is a static error, when the effective value of the declared-modes attribute
            of an xsl:package element is yes, if the package contains an explicit reference to an 
            undeclared mode, or if it implicitly uses the unnamed mode and the unnamed mode is undeclared.</description>
      <created by="Abel Braaksma" on="2014-10-21"/>
      <modified by="Abel Braaksma" on="2019-02-25" change="Bug #30221. Fix expected error code, change to xsl:package and fix related tests that use this stylesheet"/>
      <environment ref="error001a"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0045b.xsl"/>
         <initial-mode name="#default"/>
      </test>
      <result>
         <!-- this test raises XTSE3085, the default-mode attribute can never cause XTDE0045 to be raised, see bug #30221) -->
         <error code="XTSE3085"/>
      </result>
   </test-case>
   
   <test-case name="error-0045ba">
      <description>Tests showing that XTDE0045 should *not* be raised when a default mode is not declared, even when you invoke with another non-existing mode  (but XTSE3085 is)
         
            [ERR XTSE3085] It is a static error, when the effective value of the declared-modes attribute
            of an xsl:package element is yes, if the package contains an explicit reference to an 
            undeclared mode, or if it implicitly uses the unnamed mode and the unnamed mode is undeclared.</description>
      <created by="Abel Braaksma" on="2014-10-21"/>
      <modified by="Abel Braaksma" on="2019-02-25" change="Bug #30221. Fix expected error code, change to xsl:package and fix related tests that use this stylesheet"/>
      <environment ref="error001a"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0045b.xsl"/>
         <initial-mode name="non-existing-other-than-default-mode"/>
      </test>
      <result>
         <error code="XTSE3085"/>
      </result>
   </test-case>
   
   <test-case name="error-0045bb">
      <description>Tests showing that #unnamed is always eligible and doesn't throw XTDE0045, but that XTSE3085 must be raised even when mode in @default-mode is never used
         
            [ERR XTSE3085] It is a static error, when the effective value of the declared-modes attribute
            of an xsl:package element is yes, if the package contains an explicit reference to an 
            undeclared mode, or if it implicitly uses the unnamed mode and the unnamed mode is undeclared.</description>
      <created by="Abel Braaksma" on="2014-10-21"/>
      <modified by="Michael Kay" on="2015-08-11" change="The transformation produces an empty document, not an empty sequence"/>
      <modified by="Abel Braaksma" on="2019-02-25" change="Bug #30221. Fix expected error code, change to xsl:package and fix related tests that use this stylesheet"/>
      <environment ref="error001a"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0045b.xsl"/>
         <initial-mode name="#unnamed"/>
      </test>
      <result>
         <error code="XTSE3085"/>
      </result>
   </test-case>
   
   <test-case name="error-0045bc">
      <description>Tests that XTDE0045 DOES NOT occur with a default-mode attribute on xsl:stylesheet 
         to a non-existing value AND with the initial mode set to an existing mode (but XTSE3085 is)
         
            [ERR XTSE3085] It is a static error, when the effective value of the declared-modes attribute
            of an xsl:package element is yes, if the package contains an explicit reference to an 
            undeclared mode, or if it implicitly uses the unnamed mode and the unnamed mode is undeclared.</description>
      <created by="Abel Braaksma" on="2014-10-21"/>
      <modified by="Abel Braaksma" on="2019-02-25" change="Bug #30221. Fix expected error code, change to xsl:package and fix related tests that use this stylesheet"/>
      <environment ref="error001a"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0045b.xsl"/>
         <initial-mode name="main"/>
      </test>
      <result>
         <error code="XTSE3085"/>
      </result>
   </test-case>
   
   <test-case name="error-0047a">
      <description>
         Note: this error is ambiguous unless there are no other invocation error conditions, hence the added initial match selection.
         Error: It is a non-recoverable dynamic error if the invocation of the stylesheet specifies both an initial mode and an initial template.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2014-11-05" change="Was ambiguous, both XTDE0047 and XTDE0044 were possible, fixed with an initial match selection" />
      <modified by="Abel Braaksma" on="2015-04-06" change="Bug 28418, error does not exist anymore in 3.0 (but this may be in error), changed spec dependency to 2.0" />
      <environment ref="error001a"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0047a.xsl"/>
         <initial-template name="main"/>
         <initial-mode name="m"/>
      </test>
      <result>
         <error code="XTDE0047"/>
      </result>
   </test-case>
      
   <!-- See bug 27983 -->
   <!--<test-case name="error-0047b">
      <description>
         Note: this test-case illustrates an ambiguity where there is a missing initial match selection AND a mode and template are specified.
         Error: It is a non-recoverable dynamic error if the invocation of the stylesheet specifies both an initial mode and an initial template.
      </description>
      <created by="Abel Braaksma" on="2014-11-05"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0047b.xsl"/>
         <initial-template name="main"/>
         <initial-mode name="m"/>
      </test>
      <result>
         <any-of>
            <error code="XTDE0047"/>
            <error code="XTDE0044"/>
         </any-of>
      </result>
   </test-case>-->
   

   <test-case name="error-0050a">
      <description>Generate error XTDE0050.
Was error-code-203.
It is a non-recoverable dynamic
                        error if the stylesheet that is invoked declares a visible
                        stylesheet parameter with
                        required="yes" and no value for this parameter is supplied
                     during the invocation of the stylesheet. A stylesheet parameter is visible if
                     it is not masked by another global variable or parameter with the same name and
                     higher import precedence.
                  If the parameter is a static parameter then
                  the value must be supplied prior to the static analysis phase.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0050a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0050"/>
      </result>
   </test-case>

   <test-case name="error-0080a">
      <description>Generate error XTSE0080.
Was error-code-206.
It is a static error to use a reserved namespace in the name of a
                        named template, a mode, an attribute
                        set, a key, a decimal-format, a variable or parameter, a stylesheet
                        function, a named output
                        definition, or a character
                        map.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0080a.xsl"/>
      </test>
      <result>
         <error code="XTSE0080"/>
      </result>
   </test-case>

   <test-case name="error-0090a">
      <description>Error: xsl:stylesheet extra att.
Was error-code-036.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090a.xsl"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-0090b">
      <description>Error: xsl:apply-imports extra select attribute.
Was error-code-041.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090b.xsl"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-0090c">
      <description>Error: xsl:apply-templates disallowed attribute.
Was error-code-046.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090c.xsl"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-0090d">
      <description>Error: xsl:call-template with surplus attribute.
Was error-code-050.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090d.xsl"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-0090e">
      <description>Error: xsl:choose.
Was error-code-054.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090e.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0090"/>
            <error code="XTSE0010"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0090f">
      <description>Error: xsl:attribute-set - extra attributes.
Was error-code-075.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090f.xsl"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-0090g">
      <description>Error: xsl:key - extra attribute.
Was error-code-087.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090g.xsl"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-0090h">
      <description>Error: xsl:include - no href.
Was error-code-089.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090h.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0090"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0090i">
      <description>Error: xsl:import - no href.
Was error-code-098.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090i.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0090"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0090j">
      <description>Error: xsl:template - extra attribute.
Was error-code-112.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090j.xsl"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-0090k">
      <description>Error: xsl:call-template - extra attribute.
Was error-code-123.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090k.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0090"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0090l">
      <description>Error: xsl:apply-templates - extra attribute.
Was error-code-134.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090l.xsl"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-0090m">
      <description>Error: xsl:strip-space with misspelled attribute.
Was error-code-148.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090m.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0090"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0090n">
      <description>Generate error XTSE0090.
Was error-code-207.
It is a static error for an element
                     from the XSLT namespace to have an attribute whose namespace is either null
                     (that is, an attribute with an unprefixed name) or the XSLT namespace, other
                     than attributes defined for the element in this document.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0090n.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-0110a">
      <description>Generate error XTSE0110.
Was error-code-208.
The value of the version attribute must be a
                     number: specifically, it must be a valid instance of the
                     type xs:decimal as defined in .</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0110a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0110"/>
      </result>
   </test-case>

   <test-case name="error-0120a">
      <description>Error: text at top level.
Was error-code-147.
An xsl:stylesheet element must not have any
                     text node children.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0120a.xsl"/>
      </test>
      <result>
         <error code="XTSE0120"/>
      </result>
   </test-case>

   <test-case name="error-0120b">
      <description>Generate error XTSE0120.
Was error-code-209.
An xsl:stylesheet element must not have any
                     text node children.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0120b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0120"/>
      </result>
   </test-case>

   <test-case name="error-0125a">
      <description>Generate error XTSE0125.
Was error-code-210.
It is a static error if the value
                        of an [xsl:]default-collation attribute, after resolving
                        against the base URI, contains no URI that the implementation recognizes as
                        a collation URI.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0125a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0125"/>
      </result>
   </test-case>

   <test-case name="error-0130a">
      <description>Generate error XTSE0130.
Was error-code-211.
It is a static error if the
                           xsl:stylesheet element has a child element whose name
                        has a null namespace URI.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0130a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0130"/>
      </result>
   </test-case>

   <test-case name="error-0150a">
      <description>
         Error: xsl:stylesheet wrong namespace. A literal result element that is used as the outermost element of 
         a simplified stylesheet module must have an xsl:version attribute.
         Was error-code-039.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2023-11-03" change="no longer invalid in XSLT 4.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20 XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="error-0150a.xsl"/>
      </test>
      <result>
         <error code="XTSE0150"/>
      </result>
   </test-case>

   <test-case name="error-0150b">
      <description>Error: xsl:include - target is not a stylesheet.
Was error-code-097.
A literal result element
                     that is used as the outermost element of a simplified stylesheet module
                        must have an xsl:version attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0150b.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0150"/>
            <error code="XTSE0165"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0150c">
      <description>Error: xsl:import - target is not a stylesheet.
Was error-code-107.
A literal result element
                     that is used as the outermost element of a simplified stylesheet module
                        must have an xsl:version attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0150c.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0150"/>
            <error code="XTSE0165"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0150d">
      <description>Generate error XTSE0150.
                   Was error-code-213.
                   A literal result element
                   that is used as the outermost element of a simplified stylesheet module
                   must have an xsl:version attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2023-11-03" change="no longer invalid in XSLT 4.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20 XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="error-0150d.xsl"/>
      </test>
      <result>
         <error code="XTSE0150"/>
      </result>
   </test-case>

   <test-case name="error-0150e">
      <description>Generate error XTSE0165. Note this involves reading a document that is not a valid stylesheet module, so there will always be an alternative of reporting the error in that module, in this case XTSE0150..
Was error-code-215.
A literal result element
                     that is used as the outermost element of a simplified stylesheet module
                        must have an xsl:version attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0150e.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0165"/>
            <error code="XTSE0150"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0160a">
      <description>Error: It is a non-recoverable dynamic error if an element has an effective version of V (with
                        V &lt; 3.0) when the implementation does not support
                     backwards compatible behavior for XSLT version V.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="backwards_compatibility" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-0160a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0160"/>
      </result>
   </test-case>

   <test-case name="error-0165a">
      <description>Error: xsl:include - file does not exist.
Was error-code-090.
It is a static error if the
                        processor is not able to retrieve the resource identified by the URI
                           reference in the href attribute of
                              xsl:include or xsl:import
                        , or if the resource that is retrieved does not contain a
                        stylesheet module conforming to this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0165a.xsl"/>
      </test>
      <result>
         <error code="XTSE0165"/>
      </result>
   </test-case>

   <test-case name="error-0165b">
      <description>Error: xsl:include - invalid URL.
Was error-code-091.
It is a static error if the
                        processor is not able to retrieve the resource identified by the URI
                           reference in the href attribute of
                              xsl:include or xsl:import
                        , or if the resource that is retrieved does not contain a
                        stylesheet module conforming to this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0165b.xsl"/>
      </test>
      <result>
         <error code="XTSE0165"/>
      </result>
   </test-case>

   <test-case name="error-0165c">
      <description>Error: xsl:include - target is not a stylesheet.
Was error-code-097.
It is a static error if the
                        processor is not able to retrieve the resource identified by the URI
                           reference in the href attribute of
                              xsl:include or xsl:import
                        , or if the resource that is retrieved does not contain a
                        stylesheet module conforming to this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0165c.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0150"/>
            <error code="XTSE0165"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0165d">
      <description>Error: xsl:import - file does not exist.
Was error-code-099.
It is a static error if the
                        processor is not able to retrieve the resource identified by the URI
                           reference in the href attribute of
                              xsl:include or xsl:import
                        , or if the resource that is retrieved does not contain a
                        stylesheet module conforming to this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0165d.xsl"/>
      </test>
      <result>
         <error code="XTSE0165"/>
      </result>
   </test-case>

   <test-case name="error-0165e">
      <description>Error: xsl:import - invalid URL.
Was error-code-100.
It is a static error if the
                        processor is not able to retrieve the resource identified by the URI
                           reference in the href attribute of
                              xsl:include or xsl:import
                        , or if the resource that is retrieved does not contain a
                        stylesheet module conforming to this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0165e.xsl"/>
      </test>
      <result>
         <error code="XTSE0165"/>
      </result>
   </test-case>

   <test-case name="error-0165f">
      <description>Error: xsl:import - target is not a stylesheet.
Was error-code-107.
It is a static error if the
                        processor is not able to retrieve the resource identified by the URI
                           reference in the href attribute of
                              xsl:include or xsl:import
                        , or if the resource that is retrieved does not contain a
                        stylesheet module conforming to this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0165f.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0150"/>
            <error code="XTSE0165"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0165g">
      <description>error in included stylesheet.
Was error-code-173.
It is a static error if the
                        processor is not able to retrieve the resource identified by the URI
                           reference in the href attribute of
                              xsl:include or xsl:import
                        , or if the resource that is retrieved does not contain a
                        stylesheet module conforming to this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0165g.xsl"/>
      </test>
      <result>
         <error code="XTSE0165"/>
      </result>
   </test-case>

   <test-case name="error-0165h">
      <description>Generate error XTSE0165.
Was error-code-214.
It is a static error if the
                        processor is not able to retrieve the resource identified by the URI
                           reference in the href attribute of
                              xsl:include or xsl:import
                        , or if the resource that is retrieved does not contain a
                        stylesheet module conforming to this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0165h.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0165"/>
      </result>
   </test-case>

   <test-case name="error-0165i">
      <description>Generate error XTSE0165. Note this involves reading a document that is not a valid stylesheet module, so there will always be an alternative of reporting the error in that module, in this case XTSE0150..
Was error-code-215.
It is a static error if the
                        processor is not able to retrieve the resource identified by the URI
                           reference in the href attribute of
                              xsl:include or xsl:import
                        , or if the resource that is retrieved does not contain a
                        stylesheet module conforming to this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0165i.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0165"/>
            <error code="XTSE0150"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0170a">
      <description>Error: xsl:include - not top-level.
Was error-code-093.
An xsl:include element must be a
                           top-level element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0170a.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0170"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0170b">
      <description>Generate error XTSE0170.
Was error-code-216.
An xsl:include element must be a
                           top-level element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0170b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0170"/>
      </result>
   </test-case>

   <test-case name="error-0180a">
      <description>Error: xsl:include - self-referential.
          It is a static error if a stylesheet module directly or indirectly includes itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2012-12-11" change="see bug 20179"/>
      <modified by="Michael Kay" on="2025-06-03" change="No longer an error in 4.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20 XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="error-0180a.xsl"/>
      </test>
      <result>
         <error code="XTSE0180"/>
      </result>
   </test-case>

   <test-case name="error-0180b">
      <description>Error: xsl:include - circular reference.
          It is a static error if a stylesheet module directly or indirectly includes itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2025-06-03" change="No longer an error in 4.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20 XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="error-0180b.xsl"/>
      </test>
      <result>
         <error code="XTSE0180"/>
      </result>
   </test-case>

   <test-case name="error-0180c">
      <description>Error: xsl:include - circular reference.
         It is a static error if a stylesheet module directly or indirectly includes itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2025-06-03" change="No longer an error in 4.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20 XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="error-0180c.xsl"/>
      </test>
      <result>
         <error code="XTSE0180"/>
      </result>
   </test-case>

   <test-case name="error-0180d">
      <description>Generate error XTSE0180.
         It is a static error if a stylesheet module directly or indirectly includes itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2025-06-03" change="No longer an error in 4.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20 XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="error-0180d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0180"/>
      </result>
   </test-case>

   <test-case name="error-0180e">
      <description>Generate error XTSE0180.
         It is a static error if a stylesheet module directly or indirectly includes itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2025-06-03" change="No longer an error in 4.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20 XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="error-0180e.xsl"/>
      </test>
      <result>
         <error code="XTSE0180"/>
      </result>
   </test-case>

   <test-case name="error-0180f">
      <description>Generate error XTSE0180.
         It is a static error if a stylesheet module directly or indirectly includes itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2025-06-03" change="No longer an error in 4.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20 XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="error-0180f.xsl"/>
      </test>
      <result>
         <error code="XTSE0180"/>
      </result>
   </test-case>

   <test-case name="error-0190a">
      <description>Error: xsl:import - not top-level.
Was error-code-102.
An xsl:import element must be a top-level element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0190a.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE0010"/>
            <error code="XTSE0190"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0190b">
      <description>Generate error XTSE0190.
Was error-code-220.
An xsl:import element must be a top-level element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0190b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0190"/>
      </result>
   </test-case>

   <test-case name="error-0200a">
      <description>Error: xsl:import - not first top-level element.
Was error-code-106.
The xsl:import element children must
                        precede all other element children of an xsl:stylesheet
                        element, including any xsl:include element children and any
                           user-defined data elements.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2014-08-26" change="applies to XSLT 2.0 only"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0200a.xsl"/>
      </test>
      <result>
         <error code="XTSE0200"/>
      </result>
   </test-case>

   <test-case name="error-0200b">
      <description>Generate error XTSE0200.
Was error-code-212.
The xsl:import element children must
                        precede all other element children of an xsl:stylesheet
                        element, including any xsl:include element children and any
                           user-defined data elements.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2014-08-26" change="applies to XSLT 2.0 only"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0200b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0200"/>
      </result>
   </test-case>

   <test-case name="error-0200c">
      <description>Generate error XTSE0200.
Was error-code-221.
The xsl:import element children must
                        precede all other element children of an xsl:stylesheet
                        element, including any xsl:include element children and any
                           user-defined data elements.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2014-08-26" change="applies to XSLT 2.0 only"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0200c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0200"/>
      </result>
   </test-case>

   <test-case name="error-0210a">
      <description>Error: xsl:import - self-referential.
Was error-code-103.
It is a static error if a
                        stylesheet module directly or indirectly imports itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0210a.xsl"/>
      </test>
      <result>
         <error code="XTSE0210"/>
      </result>
   </test-case>

   <test-case name="error-0210b">
      <description>Error: xsl:import - circular reference.
Was error-code-104.
It is a static error if a
                        stylesheet module directly or indirectly imports itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0210b.xsl"/>
      </test>
      <result>
         <error code="XTSE0210"/>
      </result>
   </test-case>

   <test-case name="error-0210c">
      <description>Error: xsl:import - circular reference.
Was error-code-105.
It is a static error if a
                        stylesheet module directly or indirectly imports itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0210c.xsl"/>
      </test>
      <result>
         <error code="XTSE0210"/>
      </result>
   </test-case>

   <test-case name="error-0210d">
      <description>Generate error XTSE0210.
Was error-code-222.
It is a static error if a
                        stylesheet module directly or indirectly imports itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0210d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0210"/>
      </result>
   </test-case>

   <test-case name="error-0210e">
      <description>Generate error XTSE0210.
Was error-code-223.
It is a static error if a
                        stylesheet module directly or indirectly imports itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0210e.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0210"/>
      </result>
   </test-case>

   <test-case name="error-0210f">
      <description>Generate error XTSE0210.
Was error-code-224.
It is a static error if a
                        stylesheet module directly or indirectly imports itself.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0210f.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0210"/>
      </result>
   </test-case>

   <test-case name="error-0215a">
      <description>Error: It is a static error if an
                        xsl:import-schema element that contains an
                        xs:schema element has a schema-location attribute,
                     or if it has a namespace attribute that conflicts with the target
                     namespace of the contained schema.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-0215a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0215"/>
      </result>
   </test-case>

   <test-case name="error-0215b">
      <description>Error: It is a static error if an
                        xsl:import-schema element that contains an
                        xs:schema element has a schema-location attribute,
                     or if it has a namespace attribute that conflicts with the target
                     namespace of the contained schema.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-0215b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0215"/>
      </result>
   </test-case>

   <test-case name="error-0220a">
      <description>Generate error XTSE0220.
Was error-code-225.
It is a static error if the synthetic
                     schema document does not satisfy the constraints described in  (section 5.1, Errors in Schema Construction and
                        Structure). This includes, without loss of generality, conflicts such
                     as multiple definitions of the same name.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-0220a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0220"/>
      </result>
   </test-case>

   <test-case name="error-0260a">
      <description>Error: xsl:include - non-empty element.
                     Was error-code-092.
                     Within an XSLT element that is required to be empty, any content other than comments or
                     processing instructions, including any whitespace text node preserved using the
                     xml:space="preserve" attribute, is a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2017-02-21" change="include different module to avoid spurious error"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0260a.xsl"/>
      </test>
      <result>
         <error code="XTSE0260"/>
      </result>
   </test-case>

   <test-case name="error-0260b">
      <description>Error: xsl:import - non-empty element.
Was error-code-101.
Within an XSLT element that is
                        required to be empty, any content other than comments or
                     processing instructions, including any whitespace text node preserved using the
                        xml:space="preserve" attribute, is a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0260b.xsl"/>
      </test>
      <result>
         <error code="XTSE0260"/>
      </result>
   </test-case>

   <test-case name="error-0260c">
      <description>Generate error XTSE0260.
Was error-code-226.
Within an XSLT element that is
                        required to be empty, any content other than comments or
                     processing instructions, including any whitespace text node preserved using the
                        xml:space="preserve" attribute, is a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0260c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0260"/>
      </result>
   </test-case>

   <test-case name="error-0260d">
      <description>Generate error XTSE0260.
Was error-code-227.
Within an XSLT element that is
                        required to be empty, any content other than comments or
                     processing instructions, including any whitespace text node preserved using the
                        xml:space="preserve" attribute, is a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0260d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0260"/>
      </result>
   </test-case>

   <test-case name="error-0265a">
      <description>Generate error XTSE0265.
Was error-code-228.
 It is a static error if there is a
                        stylesheet module in the
                        stylesheet that specifies
                        input-type-annotations="strip" and another stylesheet module that specifies
                        input-type-annotations="preserve".</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0265a.xsl"/>
         <stylesheet file="error-0265a2.xsl" role="secondary"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0265"/>
      </result>
   </test-case>

   <test-case name="error-0270a">
      <description>Generate error XTSE0270: two statically-conflicting strip-space/preserve-space declarations.
Was error-code-229c.
It 
               is a static error if 
               within any package
               the same NameTest
            appears in both an xsl:strip-space and an xsl:preserve-space
               declaration if both have the same import
               precedence. Two NameTests are considered the same if they match the same set of names
               (which can be determined by comparing them after expanding namespace prefixes to URIs).</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0270a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0270"/>
      </result>
   </test-case>

   <test-case name="error-0280a">
      <description>Error: xsl:apply-templates using undeclared prefix in mode name.
Was error-code-045.
In the case of a prefixed lexical QName used as the
                        value (or as part of the value) 
                        of an attribute in the stylesheet,
                        or appearing within an XPath expression
                        in the stylesheet, it is a static
                           error if the defining
                              element has no namespace node whose name matches the prefix of the
                        lexical QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0280a.xsl"/>
      </test>
      <result>
         <error code="XTSE0280"/>
      </result>
   </test-case>

   <test-case name="error-0280b">
      <description>Error: xsl:call-template using an undeclared namespace.
Was error-code-052.
In the case of a prefixed lexical QName used as the
                        value (or as part of the value) 
                        of an attribute in the stylesheet,
                        or appearing within an XPath expression
                        in the stylesheet, it is a static
                           error if the defining
                              element has no namespace node whose name matches the prefix of the
                        lexical QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0280b.xsl"/>
      </test>
      <result>
         <error code="XTSE0280"/>
      </result>
   </test-case>

   <test-case name="error-0280c">
      <description>Error: xsl:attribute-set - bad name.
Was error-code-073.
In the case of a prefixed lexical QName used as the
                        value (or as part of the value) 
                        of an attribute in the stylesheet,
                        or appearing within an XPath expression
                        in the stylesheet, it is a static
                           error if the defining
                              element has no namespace node whose name matches the prefix of the
                        lexical QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0280c.xsl"/>
      </test>
      <result>
         <error code="XTSE0280"/>
      </result>
   </test-case>

   <test-case name="error-0280d">
      <description>Error: xsl:template - undeclared prefix.
Was error-code-113.
In the case of a prefixed lexical QName used as the
                        value (or as part of the value) 
                        of an attribute in the stylesheet,
                        or appearing within an XPath expression
                        in the stylesheet, it is a static
                           error if the defining
                              element has no namespace node whose name matches the prefix of the
                        lexical QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0280d.xsl"/>
      </test>
      <result>
         <error code="XTSE0280"/>
      </result>
   </test-case>

   <test-case name="error-0280e">
      <description>Error: xsl:call-template - bad template name prefix.
Was error-code-120.
In the case of a prefixed lexical QName used as the
                        value (or as part of the value) 
                        of an attribute in the stylesheet,
                        or appearing within an XPath expression
                        in the stylesheet, it is a static
                           error if the defining
                              element has no namespace node whose name matches the prefix of the
                        lexical QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0280e.xsl"/>
      </test>
      <result>
         <error code="XTSE0280"/>
      </result>
   </test-case>

   <test-case name="error-0280f">
      <description>Generate error XTSE0280.
Was error-code-231.
In the case of a prefixed lexical QName used as the
                        value (or as part of the value) 
                        of an attribute in the stylesheet,
                        or appearing within an XPath expression
                        in the stylesheet, it is a static
                           error if the defining
                              element has no namespace node whose name matches the prefix of the
                        lexical QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0280f.xsl"/>
      </test>
      <result>
         <error code="XTSE0280"/>
      </result>
   </test-case>

   <test-case name="error-0290a">
      <description>Generate error XTDE1460 or XTDE0290.
                        Was error-code-381.
                        Where the result of evaluating an XPath expression (or an attribute value
                        template) is required to be a lexical QName, or if it is permitted to be a
                        lexical QName and the actual value takes the form of a lexical QName,
                        then unless otherwise specified it is a non-recoverable dynamic error if the
                        value has a prefix and the defining element has no
                        namespace node whose name matches that prefix. This error
                        may be signaled as a static error if the value of the expression can be determined
                        statically.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2016-03-17" change="A processor that does not implement serialization may ignore the format attribute"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="serialization"/>
      </dependencies>
      <test>
         <stylesheet file="error-0290a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
            <error code="XTDE0290"/>
            <error code="XTDE1460"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0340a">
      <description>Error: xsl:key - bad match attribute.
Was error-code-085a.
Where an attribute is defined to contain a pattern, it is a static
                           error if the pattern does not match the production Pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
         <feature value="namespace_axis"/>
      </dependencies>
      <test>
         <stylesheet file="error-0340a.xsl"/>
      </test>
      <result>
         <error code="XTSE0340"/>
      </result>
   </test-case>

   <test-case name="error-0340b">
      <description>Error: xsl:template - bad pattern.
Was error-code-110.
Where an attribute is defined to contain a pattern, it is a static
                           error if the pattern does not match the production Pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0340b.xsl"/>
      </test>
      <result>
         <error code="XTSE0340"/>
      </result>
   </test-case>

   <test-case name="error-0340c">
      <description>Test that PI names may NOT contain a colon (see Namespaces REC section 6).
Was error-code-149.
Where an attribute is defined to contain a pattern, it is a static
                           error if the pattern does not match the production Pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0340c.xsl"/>
      </test>
      <result>
         <error code="XTSE0340"/>
      </result>
   </test-case>

   <test-case name="error-0340d">
      <description>Generate error XTSE0340.
Was error-code-232.
Where an attribute is defined to contain a pattern, it is a static
                           error if the pattern does not match the production Pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0340d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0340"/>
      </result>
   </test-case>

   <test-case name="error-0350a">
      <description>unclosed expression in AVT.
Was error-code-184.
It is a static error if an unescaped
                     left curly bracket appears in a fixed part of a content value template
                     without a matching right curly bracket.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0350a.xsl"/>
      </test>
      <result>
         <error code="XTSE0350"/>
      </result>
   </test-case>

   <test-case name="error-0350b">
      <description>Generate error XTSE0350.
Was error-code-233.
It is a static error if an unescaped
                     left curly bracket appears in a fixed part of a content value template
                     without a matching right curly bracket.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0350b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0350"/>
      </result>
   </test-case>

   <test-case name="error-0370a">
      <description>Generate error XTSE0370.
Was error-code-234.
It is a static error if an unescaped
                     right curly bracket occurs in a fixed part of a content value template.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0370a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0370"/>
      </result>
   </test-case>

   <test-case name="error-0410a">
      <description>Generate error XTDE0410.
Was error-code-235.
It is a non-recoverable dynamic
                                 error if the result sequence used to construct the
                              content of an element node contains a namespace node or attribute node
                              that is preceded in the sequence by a node that is neither a namespace
                              node nor an attribute node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0410a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0410"/>
      </result>
   </test-case>

   <test-case name="error-0420a">
      <description>this succeeds in 1.0, with top-down construction, but is should fail in 2.0 with bottom up construction. Note that the xsl:copy is copying a document node which can't have an attribute..
Was error-code-187.
It is a non-recoverable dynamic
                                 error if the result sequence used to construct the
                              content of a document node contains a namespace node or attribute
                              node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0420a.xsl"/>
      </test>
      <result>
         <error code="XTDE0420"/>
      </result>
   </test-case>

   <test-case name="error-0420b">
      <description>Generate error XTDE0420.
Was error-code-236.
It is a non-recoverable dynamic
                                 error if the result sequence used to construct the
                              content of a document node contains a namespace node or attribute
                              node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0420b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0420"/>
      </result>
   </test-case>

   <test-case name="error-0430a">
      <description>Generate error XTDE0430.
Was error-code-237.
It is a non-recoverable dynamic
                                 error if the result sequence contains two or more
                              namespace nodes having the same name but different string values (that is, namespace
                              nodes that map the same prefix to different namespace URIs).</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0430a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0430"/>
      </result>
   </test-case>

   <test-case name="error-0440a">
      <description>TEST xsl:namespace declaring the default namespace (XSLT 2.0) this is an error if the element is in no namespace.
Was error-code-019.
It is a non-recoverable dynamic
                                 error if the result sequence contains a namespace node
                              with no name and the element node being constructed has a null
                              namespace URI (that is, it is an error to define a default namespace
                              when the element is in no namespace). </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0440a.xsl"/>
      </test>
      <result>
         <error code="XTDE0440"/>
      </result>
   </test-case>

   <test-case name="error-0440b">
      <description>Generate error XTDE0440.
Was error-code-238.
It is a non-recoverable dynamic
                                 error if the result sequence contains a namespace node
                              with no name and the element node being constructed has a null
                              namespace URI (that is, it is an error to define a default namespace
                              when the element is in no namespace). </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0440b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0440"/>
      </result>
   </test-case>

   <test-case name="error-0450a">
      <description>Error: It is a non-recoverable dynamic
                                 error if the result sequence contains a function item.
                           </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2016-03-17" change="dependency on HOF feature"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="higher_order_functions"/>
      </dependencies>
      <test>
         <stylesheet file="error-0450a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0450"/>
      </result>
   </test-case>

   <test-case name="error-0500a">
      <description>Error: xsl:template - no match or name.
Was error-code-108.
An xsl:template element must have either a
                        match attribute or a name attribute, or both. An
                        xsl:template element that has no match
                     attribute must have no mode attribute and no
                        priority attribute. An xsl:template
                        element that has no name attribute must have no visibility
                        attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0500a.xsl"/>
      </test>
      <result>
         <error code="XTSE0500"/>
      </result>
   </test-case>

   <test-case name="error-0500b">
      <description>Generate error XTSE0500.
Was error-code-240.
An xsl:template element must have either a
                        match attribute or a name attribute, or both. An
                        xsl:template element that has no match
                     attribute must have no mode attribute and no
                        priority attribute. An xsl:template
                        element that has no name attribute must have no visibility
                        attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0500b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0500"/>
      </result>
   </test-case>

   <test-case name="error-0500c">
      <description>Generate error XTSE0500.
Was error-code-241.
An xsl:template element must have either a
                        match attribute or a name attribute, or both. An
                        xsl:template element that has no match
                     attribute must have no mode attribute and no
                        priority attribute. An xsl:template
                        element that has no name attribute must have no visibility
                        attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0500c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0500"/>
      </result>
   </test-case>

   <test-case name="error-0500d">
      <description>Generate error XTSE0500.
Was error-code-242.
An xsl:template element must have either a
                        match attribute or a name attribute, or both. An
                        xsl:template element that has no match
                     attribute must have no mode attribute and no
                        priority attribute. An xsl:template
                        element that has no name attribute must have no visibility
                        attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0500d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0500"/>
      </result>
   </test-case>

   <test-case name="error-0505a">
      <description>Error: It is a type error if the result of
                     evaluating the sequence
                        constructor cannot be converted to the required type.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0505a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0505"/>
      </result>
   </test-case>

   <test-case name="error-0510a">
      <description>Generate error XTTE0510.
Was error-code-243.
It is a type error if an
                        xsl:apply-templates instruction with no select
                     attribute is evaluated when the context
                        item is not a node. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0510a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0510"/>
      </result>
   </test-case>

   <test-case name="error-0520a">
      <description>Error: xsl:apply-templates (select att must be a node()*).
Was error-code-044.
It is a type error if the sequence
                     returned by the select expression of
                           xsl:apply-templates
                      contains an item that is not a node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2017-04-28" change="test not applicable to XSLT 3.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0520a.xsl"/>
      </test>
      <result>
         <error code="XTTE0520"/>
      </result>
   </test-case>

   <test-case name="error-0520b">
      <description>Error: xsl:apply-templates - node a node-set.
Was error-code-130.
It is a type error if the sequence
                     returned by the select expression of
                           xsl:apply-templates
                      contains an item that is not a node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2017-04-28" change="test not applicable to XSLT 3.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0520b.xsl"/>
      </test>
      <result>
         <error code="XTTE0520"/>
      </result>
   </test-case>

   <test-case name="error-0520c">
      <description>"." used when not a node - static error even though never executed.
Was error-code-181.
It is a type error if the sequence
                     returned by the select expression of
                           xsl:apply-templates
                      contains an item that is not a node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0520c.xsl"/>
      </test>
      <result>
         <any-of>
            <assert-xml>&lt;a&gt;***** error not detected! *****&lt;/a&gt;</assert-xml>
            <error code="XTTE0520"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0520d">
      <description>Generate error XTTE0520.
Was error-code-244.
It is a type error if the sequence
                     returned by the select expression of
                           xsl:apply-templates
                      contains an item that is not a node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2017-04-28" change="test not applicable to XSLT 3.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0520d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0520"/>
      </result>
   </test-case>

   <test-case name="error-0530a">
      <description>Generate error XTSE0530. Was error-code-245.
                    The value of the priority attribute of the
                    xsl:template element must conform to the rules for the
                    xs:decimal type defined in [...].
                    Negative values are permitted.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0530a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0530"/>
      </result>
   </test-case>

   <test-case name="error-0540a">
      <description>Error: It is a non-recoverable
                    dynamic error if the conflict resolution algorithm for
                    template rules leaves more than one matching template rule  
                    when the declaration of the relevant mode has an
                    on-multiple-match attribute with the value fail.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0540a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0540"/>
      </result>
   </test-case>

   <test-case name="error-0545a">
      <description>Error: It is a static error if for any named or unnamed mode, a package explicitly specifies 
        two conflicting values for the same attribute in different xsl:mode declarations having the same import 
        precedence, unless there is another definition of the same attribute with higher import precedence. 
        The attributes in question are the attributes other than name on the xsl:mode element.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0545a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0545"/>
      </result>
   </test-case>

   <test-case name="error-0545b">
      <description>Error: It is a static error if for any named or unnamed mode, a package explicitly specifies 
        two conflicting values for the same attribute in different xsl:mode declarations having the same import 
        precedence, unless there is another definition of the same attribute with higher import precedence. 
        The attributes in question are the attributes other than name on the xsl:mode element.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0545b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0545"/>
      </result>
   </test-case>

   <test-case name="error-0550a">
      <description>Error: xsl:template - bad mode name. Was error-code-118.
                        It is a static error if the list
                        of modes in the mode attribute of xsl:template
                        is empty, if the same token is included more than once in the
                        list, if the list contains an invalid token, or if the token
                        #all appears together with any other value.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0550a.xsl"/>
      </test>
      <result>
         <error code="XTSE0550"/>
      </result>
   </test-case>

   <test-case name="error-0550b">
      <description>Generate error XTSE0550. Was error-code-247.
                        It is a static error if the list
                        of modes in the mode attribute of xsl:template
                        is empty, if the same token is included more than once in the
                        list, if the list contains an invalid token, or if the token
                        #all appears together with any other value.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0550b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0550"/>
      </result>
   </test-case>

   <test-case name="error-0550c">
      <description>Generate error XTSE0550. Was error-code-248.
                        It is a static error if the list
                        of modes in the mode attribute of xsl:template
                        is empty, if the same token is included more than once in the
                        list, if the list contains an invalid token, or if the token
                        #all appears together with any other value.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0550c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0550"/>
      </result>
   </test-case>

   <test-case name="error-0550d">
      <description>Generate error XTSE0550. Was error-code-249.
                    It is a static error if the list
                    of modes in the mode attribute of xsl:template
                    is empty, if the same token is included more than once in the
                    list, if the list contains an invalid token, or if the token
                    #all appears together with any other value.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0550d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0550"/>
      </result>
   </test-case>

   <test-case name="error-0550e">
      <description>Generate error XTSE0550. Was error-code-250.
                    It is a static error if the list
                    of modes in the mode attribute of xsl:template
                    is empty, if the same token is included more than once in the
                    list, if the list contains an invalid token, or if the token
                    #all appears together with any other value.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0550e.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0550"/>
      </result>
   </test-case>

   <test-case name="error-0550f">
      <description>Generate error XTSE0550. Was error-code-251.
                    It is a static error if the list
                    of modes in the mode attribute of xsl:template
                    is empty, if the same token is included more than once in the
                    list, if the list contains an invalid token, or if the token
                    #all appears together with any other value.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0550f.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0550"/>
      </result>
   </test-case>

   <test-case name="error-0555a">
      <description>Error: It is a non-recoverable dynamic
                           error if xsl:apply-templates,
                           xsl:apply-imports or xsl:next-match is
                        used to process a node using a mode whose declaration specifies
                           on-no-match="fail" when there is no template rule in the stylesheet whose
                        match pattern matches that node. </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0555a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0555"/>
      </result>
   </test-case>

   <test-case name="error-0555b">
      <description>Error: It is a non-recoverable dynamic
                           error if xsl:apply-templates,
                           xsl:apply-imports or xsl:next-match is
                        used to process a node using a mode whose declaration specifies
                           on-no-match="fail" when there is no template rule in the stylesheet whose
                        match pattern matches that node. </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0555b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0555"/>
      </result>
   </test-case>

   <test-case name="error-0555c">
      <description>Error: It is a non-recoverable dynamic
                           error if xsl:apply-templates,
                           xsl:apply-imports or xsl:next-match is
                        used to process a node using a mode whose declaration specifies
                           on-no-match="fail" when there is no template rule in the stylesheet whose
                        match pattern matches that node. </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0555c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0555"/>
      </result>
   </test-case>

   <test-case name="error-0560a">
      <description>Error: Calling xsl:apply-imports when the current template rule is null.
Was error-code-032.
It is a non-recoverable dynamic
                        error if xsl:apply-imports or
                        xsl:next-match is evaluated when the current template rule is 
                     absent.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0560a.xsl"/>
      </test>
      <result>
         <error code="XTDE0560"/>
      </result>
   </test-case>

   <test-case name="error-0560b">
      <description>Error: Calling xsl:apply-imports when evaluating a global variable.
Was error-code-033.
It is a non-recoverable dynamic
                        error if xsl:apply-imports or
                        xsl:next-match is evaluated when the current template rule is 
                     absent.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0560b.xsl"/>
      </test>
      <result>
         <error code="XTDE0560"/>
      </result>
   </test-case>

   <test-case name="error-0560c">
      <description>Generate error XTDE0560.
Was error-code-252.
It is a non-recoverable dynamic
                        error if xsl:apply-imports or
                        xsl:next-match is evaluated when the current template rule is 
                     absent.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0560c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0560"/>
      </result>
   </test-case>

   <test-case name="error-0560d">
      <description>Generate error XTRE1500.
Was error-code-253.
It is a non-recoverable dynamic
                        error if xsl:apply-imports or
                        xsl:next-match is evaluated when the current template rule is 
                     absent.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0560d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0560"/>
      </result>
   </test-case>

   <test-case name="error-0570a">
      <description>Test declaring a variable with incorrect type "element/attribute of type X"..
Was error-code-007.
It is a type error if the supplied value of a variable cannot be
                     converted to the required type.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-0570a.xsl"/>
      </test>
      <result>
         <error code="XTTE0570"/>
      </result>
   </test-case>

   <test-case name="error-0570b">
      <description>Test declaring a variable with incorrect type "element/attribute of type X"..
Was error-code-011.
It is a type error if the supplied value of a variable cannot be
                     converted to the required type.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-0570b.xsl"/>
      </test>
      <result>
         <error code="XTTE0570"/>
      </result>
   </test-case>

   <test-case name="error-0570c">
      <description>type-check contents of a template rule against the type of the context item (could be detected statically by inference from the match pattern, but dynamic reporting is also allowed).
Was error-code-198.
It is a type error if the supplied value of a variable cannot be
                     converted to the required type.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0570c.xsl"/>
      </test>
      <result>
         <error code="XTTE0570"/>
      </result>
   </test-case>

   <test-case name="error-0570d">
      <description>Generate error XTTE0570.
Was error-code-254.
It is a type error if the supplied value of a variable cannot be
                     converted to the required type.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0570d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0570"/>
      </result>
   </test-case>

   <test-case name="error-0580a">
      <description>Generate error XTSE0580.
Was error-code-255.
It is a static error if the values of
                     the name attribute of two sibling
                           xsl:param elements represent the same expanded QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0580a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0580"/>
      </result>
   </test-case>

   <test-case name="error-0580b">
      <description>Generate error XTSE0580.
Was error-code-256.
It is a static error if the values of
                     the name attribute of two sibling
                           xsl:param elements represent the same expanded QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0580b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0580"/>
      </result>
   </test-case>

   <test-case name="error-0590a">
      <description>Generate error XTTE0590.
Was error-code-257.
It is a type error if the conversion of
                     the supplied value of a parameter to
                     its required type fails.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0590a.xsl"/>
      </test>
      <result>
         <error code="XTTE0590"/>
      </result>
   </test-case>

   <test-case name="error-0600a">
      <description>Generate error XTTE0600.
Was error-code-258.
If a default value is given explicitly, that is, if there is either a
                        select attribute or a non-empty sequence constructor, then it is a
                        type error if the default value
                     cannot be converted to the required type, using the function conversion rules.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0600a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0600"/>
      </result>
   </test-case>

   <test-case name="error-0610a">
      <description>
            Generate error XTDE0610 for a template param.
            Was error-code-259.
               If an optional parameter has no select attribute and has an empty
               sequence constructor, and
               if there is an as attribute, then the default value of the
               parameter is an empty sequence. If the empty sequence is not a valid instance
               of the required type defined in the as attribute, then the
               parameter is treated as a required parameter, which means that it is a non-recoverable dynamic error if the
               caller supplies no value for the parameter.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Bug 28429 and 28355, this error was dropped in 3.0, test forked"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0610a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0610"/>
      </result>
   </test-case>


   <test-case name="error-0610b">
      <description>
            XSLT 3.0: this error was dropped in favor of XTDE0700, see Bug 28355
            Generate error XTDE0610 (=XTDE0700 now) for a template param.
            Was error-code-259.
               If an optional parameter has no select attribute and has an empty
               sequence constructor, and
               if there is an as attribute, then the default value of the
               parameter is an empty sequence. If the empty sequence is not a valid instance
               of the required type defined in the as attribute, then the
               parameter is treated as a required parameter, which means that it is a non-recoverable dynamic error if the
               caller supplies no value for the parameter.</description>
      <created by="Abel Braaksma" on="2015-04-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0610a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0700"/>
      </result>
   </test-case>

   <test-case name="error-0610c">
      <description>
            Generate error XTDE0610 for a global parameter.
            Was error-code-410, was error-0610b
               If an optional parameter has no select attribute and has an empty
               sequence constructor, and
               if there is an as attribute, then the default value of the
               parameter is an empty sequence. If the empty sequence is not a valid instance
               of the required type defined in the as attribute, then the
               parameter is treated as a required parameter, which means that it is a non-recoverable dynamic error if the
               caller supplies no value for the parameter.
      </description>
      <created by="Colin Adams" on="2012-11-07"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Bug 28429 and 28355, this error was dropped in 3.0"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0610c.xsl"/>
         <initial-template name="initial"/>
      </test>
      <result>
         <error code="XTDE0610"/>
      </result>
   </test-case>

   <test-case name="error-0610d">
      <description>
            XSLT 3.0: this error was dropped in favor of XTDE0700, see Bug 28355
            Generate error XTDE0610 (=XTDE0700 now) for a global parameter.
            Was error-code-410, was error-0610b
               If an optional parameter has no select attribute and has an empty
               sequence constructor, and
               if there is an as attribute, then the default value of the
               parameter is an empty sequence. If the empty sequence is not a valid instance
               of the required type defined in the as attribute, then the
               parameter is treated as a required parameter, which means that it is a non-recoverable dynamic error if the
               caller supplies no value for the parameter.
      </description>
      <created by="Abel Braaksma" on="2015-04-07" />
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0610c.xsl"/>
         <initial-template name="initial"/>
      </test>
      <result>
         <error code="XTDE0700"/>
      </result>
   </test-case>

   <test-case name="error-0620a">
      <description>Error: xsl:variable - select attribute plus content.
Was error-code-141.
It is a static error if a variable-binding element has a
                        select attribute and has non-empty content.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0620a.xsl"/>
      </test>
      <result>
         <error code="XTSE0620"/>
      </result>
   </test-case>

   <test-case name="error-0620b">
      <description>Generate error XTSE0620.
Was error-code-260.
It is a static error if a variable-binding element has a
                        select attribute and has non-empty content.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0620b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0620"/>
      </result>
   </test-case>

   <test-case name="error-0630a">
      <description>Error: xsl:variable - duplicate name.
Was error-code-139.
It is a static error if a stylesheet contains more than one binding of a
                     global variable with the same name and same import precedence, unless it also contains another binding with
                     the same name and higher import precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0630a.xsl"/>
      </test>
      <result>
         <error code="XTSE0630"/>
      </result>
   </test-case>

   <test-case name="error-0630b">
      <description>Error: xsl:variable - duplicate name.
Was error-code-150.
It is a static error if a stylesheet contains more than one binding of a
                     global variable with the same name and same import precedence, unless it also contains another binding with
                     the same name and higher import precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0630b.xsl"/>
      </test>
      <result>
         <error code="XTSE0630"/>
      </result>
   </test-case>

   <test-case name="error-0630c">
      <description>Generate error XTSE0630.
Was error-code-261.
It is a static error if a stylesheet contains more than one binding of a
                     global variable with the same name and same import precedence, unless it also contains another binding with
                     the same name and higher import precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0630c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0630"/>
      </result>
   </test-case>

   <test-case name="error-0640a">
      <description>Error: xsl:key - circular key reference.
Was error-code-086.
In general, a circularity in a stylesheet is a non-recoverable dynamic error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640a.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640b">
      <description>Error: xsl:variable - self-reference.
Was error-code-145. In general, a circularity in a stylesheet is a non-recoverable dynamic error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2015-09-04" change="Added option of error code XPST0008 - arguably preferable"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640b.xsl"/>
      </test>
      <result>
        <any-of>
          <error code="XTDE0640"/>
          <error code="XPST0008"/>
        </any-of>  
      </result>
   </test-case>

   <test-case name="error-0640c">
      <description>Error: xsl:variable - circular reference.
Was error-code-146.
In general, a circularity in a stylesheet is a non-recoverable dynamic error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640c.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640d">
      <description>Test use of a variable within a pattern causing a circularity (XSLT 2.0).
Was error-code-194.
In general, a circularity in a stylesheet is a non-recoverable dynamic error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment>
         <source role=".">
            <content><![CDATA[<doc><param id="1"/><param id="2"/></doc>]]></content>
         </source>
      </environment>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640d.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640e-1">
      <description>Test use of variables in a key match pattern (XSLT 2.0) causing a circularity.
         See bug 26543 (in XSLT 2.0 this error can still be 'recovered').
         Was error-code-195.
         In general, a circularity in a stylesheet is a non-recoverable dynamic error.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Abel Braaksma" on="2015-03-30" change="Bug 26543, error not disputed anymore, but in XSLT 2.0 it may be ignored"/>
      <environment ref="error214"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640e.xsl"/>
      </test>
      <result>
         <any-of>
            <!-- recovery action is to not match the pattern when an error occurs: -->
            <assert-xml><![CDATA[<out total="0"/>]]></assert-xml>
            <!-- or to report the error -->
            <error code="XTDE0640"/>
          </any-of>
      </result>
   </test-case>

   <test-case name="error-0640e-2">
      <description>Test use of variables in a key match pattern (XSLT 2.0) causing a circularity.
         See bug 26543 (not disputed anymore for XSLT 3.0).
         Was error-code-195.
         In general, a circularity in a stylesheet is a non-recoverable dynamic error.
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <environment ref="error214"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640e.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640f">
      <description>Test use of variables in a key use expression (XSLT 2.0) causing a circularity.
Was error-code-196.
In general, a circularity in a stylesheet is a non-recoverable dynamic error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error214"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640f.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640g">
      <description>Test use of key() in a key use expression (XSLT 2.0) with circular definitions.
Was error-code-197.
In general, a circularity in a stylesheet is a non-recoverable dynamic error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error214"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640g.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640h">
      <description>Generate error XTDE0640.
         Was error-code-262.
         In general, a circularity in a stylesheet is a non-recoverable dynamic error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640h.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640i">
      <description>
         Generate error XTDE0640 (circularity error) with xsl:evaluate in xsl:param
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <modified by="Michael Kay" on="2015-09-04" change="The variable reference in xsl:evaluate was unresolved, so this wasn't a circularity as written"/>
      <modified by="Michael Kay" on="2017-02-21" change="Another attempt to solve the same problem"/>
      <modified by="Michael Kay" on="2018-07-18" change="Alternative error if xsl:evaluate not available"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640i.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTDE0640"/>
            <error code="XTDE3175"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0640j">
      <description>
         Generate error XTDE0640 (circularity error) with xsl:evaluate in xsl:variable
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <modified by="Michael Kay" on="2015-09-04" change="The variable reference in xsl:evaluate was unresolved, so this wasn't a circularity as written"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640j.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640k">
      <description>
         Generate error XTDE0640 (circularity error) with anonymous function in seqtor
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640k.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640l">
      <description>
         Generate error XTDE0640 (circularity error) with anonymous function in select expr
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640l.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640m">
      <description>
         Generate error XTDE0640 (circularity error) and trying to catch it with xsl:try/catch (not allowed, see Bug 28368)
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <modified by="Michael Kay" on="2018-05-22" 
         change="The final spec says that the outcome of catching XTDE0640 is implementation-defined"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640m.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XTDE0640"/>
            <assert>exists(/out/@wrong)</assert>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0640n">
      <description>
         Generate error XTDE0640 (circularity error) raised through xsl:evaluate and trying to catch it with xsl:try/catch in a function (not allowed, see Bug 28368)
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <modified by="Michael Kay" on="2015-09-04" change="The variable reference in xsl:evaluate was unresolved, so this wasn't a circularity as written"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640n.xsl"/>
      </test>
      <result>
         <error code="XTDE0640"/>
      </result>
   </test-case>

   <test-case name="error-0640o-1">
      <description>
         Generate error XTDE0640 (circularity error) NOT raised for static params (they are not forward in scope, raise XPST0008)
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640o.xsl"/>
      </test>
      <result>
         <error code="XPST0008"/>
      </result>
   </test-case>

   <test-case name="error-0640o-2">
      <description>
         Generate error XTDE0640 (circularity error) NOT raised for static params if you set the value externally
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <modified by="Michael Kay" on="2015-10-13" change="See bug 29052"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640o.xsl"/>
         <param name="circular" select="true()" />
      </test>
      <result>
         <error code="XPST0008"/>
      </result>
   </test-case>

   <test-case name="error-0640p">
      <description>
         Generate error XTDE0640 (circularity error) NOT raised for static variables (they are not forward in scope, raise XPST0008)
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0640p.xsl"/>
      </test>
      <result>
         <error code="XPST0008"/>
      </result>
   </test-case>

   <test-case name="error-0650a">
      <description>Error: xsl:call-template.
Was error-code-049.
It is a static error if a stylesheet contains an
                        xsl:call-template instruction whose name
                     attribute does not match the name attribute of any
                        named template 
                           visible in the containing package 
                           (this includes any template defined in this package, as well as templates
                           accepted from used packages whose visibility in this package
                           is not hidden). For more details of the
                  process of binding the called template, see .</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0650a.xsl"/>
      </test>
      <result>
         <error code="XTSE0650"/>
      </result>
   </test-case>

   <test-case name="error-0650b">
      <description>Error: xsl:call-template - unknown template name.
Was error-code-121.
It is a static error if a stylesheet contains an
                        xsl:call-template instruction whose name
                     attribute does not match the name attribute of any
                        named template 
                           visible in the containing package 
                           (this includes any template defined in this package, as well as templates
                           accepted from used packages whose visibility in this package
                           is not hidden). For more details of the
                  process of binding the called template, see .</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0650b.xsl"/>
      </test>
      <result>
         <error code="XTSE0650"/>
      </result>
   </test-case>

   <test-case name="error-0650c">
      <description>Generate error XTSE0650.
Was error-code-263.
It is a static error if a stylesheet contains an
                        xsl:call-template instruction whose name
                     attribute does not match the name attribute of any
                        named template 
                           visible in the containing package 
                           (this includes any template defined in this package, as well as templates
                           accepted from used packages whose visibility in this package
                           is not hidden). For more details of the
                  process of binding the called template, see .</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0650c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0650"/>
      </result>
   </test-case>

   <test-case name="error-0660a">
      <description>Error: xsl:template - duplicate name.
Was error-code-034.
It is a static error if a  
                        package contains more than one template with the same name and the same
                        import precedence, unless it
                     also contains a template with the same
                     name and higher import
                     precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0660a.xsl"/>
      </test>
      <result>
         <error code="XTSE0660"/>
      </result>
   </test-case>

   <test-case name="error-0660b">
      <description>Error: xsl:template - duplicate name.
Was error-code-114.
It is a static error if a  
                        package contains more than one template with the same name and the same
                        import precedence, unless it
                     also contains a template with the same
                     name and higher import
                     precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0660b.xsl"/>
      </test>
      <result>
         <error code="XTSE0660"/>
      </result>
   </test-case>

   <test-case name="error-0660c">
      <description>Error: xsl:template - duplicate name.
Was error-code-115.
It is a static error if a  
                        package contains more than one template with the same name and the same
                        import precedence, unless it
                     also contains a template with the same
                     name and higher import
                     precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0660c.xsl"/>
      </test>
      <result>
         <error code="XTSE0660"/>
      </result>
   </test-case>

   <test-case name="error-0660d">
      <description>Generate error XTSE0660.
Was error-code-264.
It is a static error if a  
                        package contains more than one template with the same name and the same
                        import precedence, unless it
                     also contains a template with the same
                     name and higher import
                     precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0660d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0660"/>
      </result>
   </test-case>

   <test-case name="error-0670a">
      <description>Error: xsl:call-template - duplicate parameters.
Was error-code-126.
It is a static error
                     if two or more sibling xsl:with-param elements have
                        name attributes that represent the same expanded QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0670a.xsl"/>
      </test>
      <result>
         <error code="XTSE0670"/>
      </result>
   </test-case>

   <test-case name="error-0670b">
      <description>Error: xsl:call-template - duplicate parameters.
Was error-code-127.
It is a static error
                     if two or more sibling xsl:with-param elements have
                        name attributes that represent the same expanded QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0670b.xsl"/>
      </test>
      <result>
         <error code="XTSE0670"/>
      </result>
   </test-case>

   <test-case name="error-0670c">
      <description>Error: xsl:apply-templates - duplicate params.
Was error-code-133.
It is a static error
                     if two or more sibling xsl:with-param elements have
                        name attributes that represent the same expanded QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0670c.xsl"/>
      </test>
      <result>
         <error code="XTSE0670"/>
      </result>
   </test-case>

   <test-case name="error-0670d">
      <description>Generate error XTSE0670.
Was error-code-265.
It is a static error
                     if two or more sibling xsl:with-param elements have
                        name attributes that represent the same expanded QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0670d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0670"/>
      </result>
   </test-case>

   <test-case name="error-0680a">
      <description>Generate error XTSE0680.
Was error-code-266.
In the case of xsl:call-template, it is a static error to pass a non-tunnel
                        parameter named x to a template that does not have a 
                        non-tunnel template parameter named
                           x, unless the
                              xsl:call-template instruction is processed with
                              XSLT 1.0
                           behavior.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0680a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0680"/>
      </result>
   </test-case>

   <test-case name="error-0690a">
      <description>Generate error XTSE0690.
Was error-code-267.
It is a static error if a template
                        that is invoked using xsl:call-template declares a template parameter specifying
                           required="yes" and not specifying tunnel="yes",
                        if no value for this parameter is supplied by the calling
                           xsl:call-template instruction.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0690a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0690"/>
      </result>
   </test-case>

   <test-case name="error-0700a">
      <description>Generate error XTDE0700.
Was error-code-268.
It is a non-recoverable dynamic
                        error if a template that is invoked using
                        xsl:apply-templates, xsl:apply-imports, or
                        xsl:next-match declares a template parameter with
                        required="yes" and no value for this parameter is supplied by
                     the calling instruction. The same error is reported in the case of a tunnel parameter whether invoked using one of these three
                     instructions or by xsl:call-template, as explained in .</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0700a.xsl"/>
      </test>
      <result>
         <error code="XTDE0700"/>
      </result>
   </test-case>

   <test-case name="error-0700b">
      <description>Generate error XTDE0060.
        Was error-code-204.
        It is a non-recoverable dynamic error if the initial
        template defines a template parameter that specifies required="yes"
        and no value is supplied.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay"
               on="2014-08-26"
               change="Error 0060 replaced by 0700 in XSLT 3.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0060a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0700"/>
      </result>
   </test-case>

   <test-case name="error-0710a">
      <description>Error: reference to undeclared xsl:attribute-set.
Was error-code-079.
It is a static error if the value of
                     the use-attribute-sets attribute of an xsl:copy,
                        xsl:element, or xsl:attribute-set element,
                     or the xsl:use-attribute-sets attribute of a literal result element, is not a
                     whitespace-separated sequence of EQNames, or
                     if it contains a QName that does not match the name attribute of
                     any xsl:attribute-set declaration in the stylesheet.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0710a.xsl"/>
      </test>
      <result>
         <error code="XTSE0710"/>
      </result>
   </test-case>

   <test-case name="error-0710b">
      <description>Error: reference to unknown xsl:attribute-set.
Was error-code-082.
It is a static error if the value of
                     the use-attribute-sets attribute of an xsl:copy,
                        xsl:element, or xsl:attribute-set element,
                     or the xsl:use-attribute-sets attribute of a literal result element, is not a
                     whitespace-separated sequence of EQNames, or
                     if it contains a QName that does not match the name attribute of
                     any xsl:attribute-set declaration in the stylesheet.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0710b.xsl"/>
      </test>
      <result>
         <error code="XTSE0710"/>
      </result>
   </test-case>

   <test-case name="error-0710c">
      <description>Generate error XTSE0710.
Was error-code-269.
It is a static error if the value of
                     the use-attribute-sets attribute of an xsl:copy,
                        xsl:element, or xsl:attribute-set element,
                     or the xsl:use-attribute-sets attribute of a literal result element, is not a
                     whitespace-separated sequence of EQNames, or
                     if it contains a QName that does not match the name attribute of
                     any xsl:attribute-set declaration in the stylesheet.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0710c.xsl"/>
      </test>
      <result>
         <error code="XTSE0710"/>
      </result>
   </test-case>

   <test-case name="error-0710d">
      <description>Generate error XTSE0710.
Was error-code-270.
It is a static error if the value of
                     the use-attribute-sets attribute of an xsl:copy,
                        xsl:element, or xsl:attribute-set element,
                     or the xsl:use-attribute-sets attribute of a literal result element, is not a
                     whitespace-separated sequence of EQNames, or
                     if it contains a QName that does not match the name attribute of
                     any xsl:attribute-set declaration in the stylesheet.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0710d.xsl"/>
      </test>
      <result>
         <error code="XTSE0710"/>
      </result>
   </test-case>

   <test-case name="error-0720a">
      <description>Error: circular reference to xsl:attribute-set.
Was error-code-080.
It is a static error if an
                        xsl:attribute-set element directly or indirectly references
                     itself via the names contained in the use-attribute-sets
                     attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0720a.xsl"/>
      </test>
      <result>
         <error code="XTSE0720"/>
      </result>
   </test-case>

   <test-case name="error-0720b">
      <description>Error: circular reference to xsl:attribute-set.
Was error-code-081.
It is a static error if an
                        xsl:attribute-set element directly or indirectly references
                     itself via the names contained in the use-attribute-sets
                     attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0720b.xsl"/>
      </test>
      <result>
         <error code="XTSE0720"/>
      </result>
   </test-case>

   <test-case name="error-0720c">
      <description>Generate error XTSE0720.
Was error-code-271.
It is a static error if an
                        xsl:attribute-set element directly or indirectly references
                     itself via the names contained in the use-attribute-sets
                     attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0720c.xsl"/>
      </test>
      <result>
         <error code="XTSE0720"/>
      </result>
   </test-case>

   <test-case name="error-0720d">
      <description>Generate error XTSE0720.
Was error-code-272.
It is a static error if an
                        xsl:attribute-set element directly or indirectly references
                     itself via the names contained in the use-attribute-sets
                     attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0720d.xsl"/>
      </test>
      <result>
         <error code="XTSE0720"/>
      </result>
   </test-case>

   <test-case name="error-0730a">
      <description>Error: If an xsl:attribute set element specifies streamable="yes" then every attribute set referenced in its
                  use-attribute-sets attribute (if present) must also specify streamable="yes".</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="error-0730a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0730"/>
      </result>
   </test-case>

   <test-case name="error-0740a">
      <description>Generate error XTSE0740.
        Was error-code-273. It is a static error if a stylesheet function
        has a name that is in no namespace.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0740a.xsl"/>
      </test>
      <result>
         <error code="XTSE0740"/>
      </result>
   </test-case>
   
   <test-case name="error-0740b">
      <description>Generate error XTSE0740.
         Was error-code-273. It is a static error if a stylesheet function
         has a name that is in no namespace.</description>
      <created by="Michael Kay" on="2015-10-25"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0740b.xsl"/>
      </test>
      <result>
         <error code="XTSE0740"/>
      </result>
   </test-case>

   <test-case name="error-0760a">
      <description>Generate error XTSE0760.
Was error-code-274.
Because arguments to a stylesheet function call must all be
                        specified, the xsl:param elements within an
                        xsl:function element must not specify a
                        default value: this means they must be empty, and
                        must not have a select attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0760a.xsl"/>
      </test>
      <result>
         <error code="XTSE0760"/>
      </result>
   </test-case>

   <test-case name="error-0760b">
      <description>Generate error XTSE0760.
Was error-code-275.
Because arguments to a stylesheet function call must all be
                        specified, the xsl:param elements within an
                        xsl:function element must not specify a
                        default value: this means they must be empty, and
                        must not have a select attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0760b.xsl"/>
      </test>
      <result>
         <error code="XTSE0760"/>
      </result>
   </test-case>

   <test-case name="error-0770a">
      <description>Generate error XTSE0770.
Was error-code-276.
It is a static error for a stylesheet to contain two or more functions
                     with the same expanded QName, the
                     same arity, and the same import precedence, unless there is
                     another function with the same expanded QName and arity, and a higher import precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0770a.xsl"/>
      </test>
      <result>
         <error code="XTSE0770"/>
      </result>
   </test-case>

   <test-case name="error-0780a">
      <description>Generate error XTTE0780. Was error-code-277.
                   If the as attribute of xsl:function
                   is specified, then the result evaluated by the sequence constructor (see ) is converted to the required type, using the
                   function conversion rules. It is a type error if this conversion fails.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0780a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0780"/>
      </result>
   </test-case>

   <test-case name="error-0790a2">
      <description>Generate error XTTE0790.
Was error-code-278.
If the value of a parameter to a stylesheet function cannot be converted to the required type, a
                        type error is signaled.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-0790a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0790"/>
      </result>
   </test-case>
   
   <test-case name="error-0790a3">
      <description>Generate error XTTE0790.
Was error-code-278.
If the value of a parameter to a stylesheet function cannot be converted to the required type, a
                        type error is signaled.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2015-09-04" change="error code changes in 3.0, test forked"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0790a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="error-0805a">
      <description>Generate error XTSE0805.
Was error-code-279.
It is a static error if an
                        attribute on a literal result element is in the XSLT namespace, unless it is one of the
                        attributes explicitly defined in this specification.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0805a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0805"/>
      </result>
   </test-case>

   <test-case name="error-0808a">
      <description>Error: xsl:stylesheet erp attribute.
Was error-code-037.
It is a static error if a
                              namespace prefix is used within the
                                 [xsl:]exclude-result-prefixes attribute and there is
                              no namespace binding in scope for that prefix.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0808a.xsl"/>
      </test>
      <result>
         <error code="XTSE0808"/>
      </result>
   </test-case>

   <test-case name="error-0808b">
      <description>Error: xsl:stylesheet erp attribute.
Was error-code-038.
It is a static error if a
                              namespace prefix is used within the
                                 [xsl:]exclude-result-prefixes attribute and there is
                              no namespace binding in scope for that prefix.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0808b.xsl"/>
      </test>
      <result>
         <error code="XTSE0808"/>
      </result>
   </test-case>

   <test-case name="error-0808c">
      <description>Generate error XTSE0808.
Was error-code-280.
It is a static error if a
                              namespace prefix is used within the
                                 [xsl:]exclude-result-prefixes attribute and there is
                              no namespace binding in scope for that prefix.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0808c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0808"/>
      </result>
   </test-case>

   <test-case name="error-0809a">
      <description>Generate error XTSE0809.
Was error-code-281.
It is a static error if the
                              value #default is used within the
                                 [xsl:]exclude-result-prefixes attribute and the parent
                              element of the [xsl:]exclude-result-prefixes attribute
                              has no default namespace.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0809a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0809"/>
      </result>
   </test-case>

   <test-case name="error-0810a">
      <description>TEST conflicting xsl:namespace declarations.
Was error-code-190.
It is a static error if 
                        within a package there is
                        more than one such declaration more than one
                              xsl:namespace-alias declaration with
                        the same literal namespace
                           URI and the same import
                           precedence and different values for the target namespace URI, unless
                        there is also an xsl:namespace-alias declaration with the
                        same literal namespace URI
                        and a higher import precedence. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0810a.xsl"/>
      </test>
      <result>
         <error code="XTSE0810"/>
      </result>
   </test-case>

   <test-case name="error-0810b">
      <description>Generate error XTSE0810.
Was error-code-282.
It is a static error if 
                        within a package there is
                        more than one such declaration more than one
                              xsl:namespace-alias declaration with
                        the same literal namespace
                           URI and the same import
                           precedence and different values for the target namespace URI, unless
                        there is also an xsl:namespace-alias declaration with the
                        same literal namespace URI
                        and a higher import precedence. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0810b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0810"/>
      </result>
   </test-case>

   <test-case name="error-0812a">
      <description>Generate error XTSE0812.
Was error-code-283.
It is a static error if a value
                        other than #default is specified for either the
                           stylesheet-prefix or the result-prefix
                        attributes of the xsl:namespace-alias element when there is
                        no in-scope binding for that namespace prefix.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0812a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0812"/>
      </result>
   </test-case>

   <test-case name="error-0820a">
      <description>Error: xsl:element bad element name (this was a recoverable error).
Was error-code-066.
It is a non-recoverable dynamic
                        error if the effective
                        value of the name attribute of the
                           xsl:element instruction is not a lexical QName. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0820a.xsl"/>
      </test>
      <result>
         <error code="XTDE0820"/>
      </result>
   </test-case>

   <test-case name="error-0820b">
      <description>Error: xsl:element - bad prefix in QName.
Was error-code-068.
It is a non-recoverable dynamic
                        error if the effective
                        value of the name attribute of the
                           xsl:element instruction is not a lexical QName. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0820b.xsl"/>
      </test>
      <result>
         <error code="XTDE0820"/>
      </result>
   </test-case>

   <test-case name="error-0820c">
      <description>Generate error XTDE0820.
Was error-code-284.
It is a non-recoverable dynamic
                        error if the effective
                        value of the name attribute of the
                           xsl:element instruction is not a lexical QName. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0820c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0820"/>
      </result>
   </test-case>

   <test-case name="error-0830a">
      <description>Error: xsl:element.
Was error-code-067.
In the case of an xsl:element instruction with no
                        namespace attribute, it is a non-recoverable dynamic error if the
                        effective value of the
                        name attribute is a lexical QName
                     whose prefix is not declared in an in-scope namespace declaration for the
                        xsl:element instruction.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0830a.xsl"/>
      </test>
      <result>
         <error code="XTDE0830"/>
      </result>
   </test-case>

   <test-case name="error-0830b">
      <description>Generate error XTDE0830.
Was error-code-285.
In the case of an xsl:element instruction with no
                        namespace attribute, it is a non-recoverable dynamic error if the
                        effective value of the
                        name attribute is a lexical QName
                     whose prefix is not declared in an in-scope namespace declaration for the
                        xsl:element instruction.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0830b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0830"/>
      </result>
   </test-case>

   <test-case name="error-0835a">
      <description>Generate error XTDE0835.
W as error-code-286.
 It is a non-recoverable dynamic error if the effective value of the namespace attribute of the
 xsl:element instruction is not in the lexical space of the xs:anyURI datatype or if it is the string
 http://www.w3.org/2000/xmlns/.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2019-11-19" change="Processors have dispensation to treat all strings as valid namespaces"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0835a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
            <error code="XTDE0835"/>
            <assert>true()</assert>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0840a">
      <description>Generate error XTSE0840.
Was error-code-287.
It is a static error if the
                        select attribute of the xsl:attribute element
                     is present unless the element has empty content.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0840a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0840"/>
      </result>
   </test-case>

   <test-case name="error-0850a">
      <description>Generate error XTDE0850.
Was error-code-288.
It is a non-recoverable dynamic
                        error if the effective
                        value of the name attribute of an
                           xsl:attribute instruction is not a
                        lexical QName.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0850a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0850"/>
      </result>
   </test-case>

   <test-case name="error-0855a">
      <description>Generate error XTDE0855.
Was error-code-289.
In the case of an xsl:attribute instruction with no
                        namespace attribute, it is a non-recoverable dynamic error if the
                        effective value of the
                        name attribute is the string xmlns.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0855a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0855"/>
      </result>
   </test-case>

   <test-case name="error-0860a">
      <description>Generate error XTDE0860.
Was error-code-290.
In the case of an xsl:attribute instruction with no
                        namespace attribute, it is a non-recoverable dynamic error if the
                        effective value of the
                        name attribute is a lexical
                        QName whose prefix is not declared in an in-scope namespace
                     declaration for the xsl:attribute instruction.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0860a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0860"/>
      </result>
   </test-case>

   <test-case name="error-0865a">
      <description>Generate error XTDE0865.
         Was error-code-291.
         It is a non-recoverable dynamic error if the effective
         value of the namespace attribute of the xsl:attribute instruction is not in the
         lexical space of the xs:anyURI datatype or if it is the string http://www.w3.org/2000/xmlns/.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2019-11-19" change="Processors have dispensation to treat all strings as valid namespaces"/>     
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0865a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
            <error code="XTDE0865"/>
            <assert>true()</assert>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-0870a">
      <description>Generate error XTSE0870.
Was error-code-292.
It is a static error if the
                           select attribute of the xsl:value-of
                        element is present when the content of the element is non-empty, or if the
                           select attribute is absent when the content is empty.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0870a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0870"/>
      </result>
   </test-case>

   <test-case name="error-0880a">
      <description>Generate error XTSE0880.
Was error-code-293.
It is a static error if the
                        select attribute of the
                        xsl:processing-instruction element is present unless the
                     element has empty content.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0880a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0880"/>
      </result>
   </test-case>

   <test-case name="error-0890a">
      <description>Generate error XTDE0890.
Was error-code-294.
It is a non-recoverable dynamic
                        error if the effective
                        value of the name attribute of the
                           xsl:processing-instruction instruction is
                     not both an NCName and a PITarget.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0890a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0890"/>
      </result>
   </test-case>

   <test-case name="error-0890b">
      <description>Generate error XTDE0890.
         Was error-code-295. It is a non-recoverable dynamic
         error if the effective value of the name attribute of the
         xsl:processing-instruction instruction is
         not both an NCName and a PITarget.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0890b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0890"/>
      </result>
   </test-case>

   <test-case name="error-0905a">
      <description>Generate error XTDE0905.
Was error-code-296.
It is a non-recoverable dynamic error if the string value of the new namespace
                     node is not valid in the lexical space of the datatype xs:anyURI,
                     or if it is the string http://www.w3.org/2000/xmlns/.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="XSD_1.1" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-0905a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0905"/>
      </result>
   </test-case>
   
   <test-case name="error-0905b">
      <description>No error XTDE0905 for XSD 1.1 (see bug 30180).
         It is a non-recoverable dynamic error if the string value of the new namespace
         node is not valid in the lexical space of the datatype xs:anyURI,
         or if it is the string http://www.w3.org/2000/xmlns/.</description>
      <created by="Michael Kay" on="2017-09-11"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="XSD_1.1" satisfied="true"/>
      </dependencies>
      <test>
         <stylesheet file="error-0905a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert>/*:out/namespace::ns="####"</assert>
      </result>
   </test-case>
   
   <test-case name="error-0905c">
      <description>Generate error XTDE0905.
         It is a non-recoverable dynamic error if the string value of the new namespace
         node is not valid in the lexical space of the datatype xs:anyURI,
         or if it is the string http://www.w3.org/2000/xmlns/.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0905c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0905"/>
      </result>
   </test-case>

   <test-case name="error-0910a">
      <description>Generate error XTSE0910.
Was error-code-297.
It is a static error if the
                        select attribute of the xsl:namespace element
                     is present when the element has content other than one or more
                        xsl:fallback instructions, or if the select
                     attribute is absent when the element has empty content.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0910a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0910"/>
      </result>
   </test-case>

   <test-case name="error-0920a">
      <description>Generate error XTDE0920.
Was error-code-298.
It is a non-recoverable dynamic
                        error if the effective
                        value of the name attribute of the
                           xsl:namespace instruction is neither a
                     zero-length string nor an NCName, or if
                     it is xmlns. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0920a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0920"/>
      </result>
   </test-case>

   <test-case name="error-0920b">
      <description>Generate error XTDE0920.
Was error-code-299.
It is a non-recoverable dynamic
                        error if the effective
                        value of the name attribute of the
                           xsl:namespace instruction is neither a
                     zero-length string nor an NCName, or if
                     it is xmlns. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0920b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0920"/>
      </result>
   </test-case>

   <test-case name="error-0925a">
      <description>Generate error XTDE0925.
Was error-code-300.
It is a non-recoverable dynamic
                        error if the xsl:namespace instruction generates
                     a namespace node whose name is xml and whose string value is not
                        http://www.w3.org/XML/1998/namespace, or a namespace node whose
                     string value is http://www.w3.org/XML/1998/namespace and whose
                     name is not xml.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0925a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0925"/>
      </result>
   </test-case>

   <test-case name="error-0925b">
      <description>Generate error XTDE0925.
Was error-code-301.
It is a non-recoverable dynamic
                        error if the xsl:namespace instruction generates
                     a namespace node whose name is xml and whose string value is not
                        http://www.w3.org/XML/1998/namespace, or a namespace node whose
                     string value is http://www.w3.org/XML/1998/namespace and whose
                     name is not xml.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0925b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0925"/>
      </result>
   </test-case>

   <test-case name="error-0930a">
      <description>Generate error XTDE0930.
Was error-code-302.
It is a non-recoverable dynamic
                        error if evaluating the select attribute or the
                     contained sequence constructor
                     of an xsl:namespace instruction results in a zero-length
                     string. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0930a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0930"/>
      </result>
   </test-case>

   <test-case name="error-0940a">
      <description>Generate error XTSE0940.
Was error-code-303.
It is a static error if the
                        select attribute of the xsl:comment element is
                     present unless the element has empty content.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0940a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0940"/>
      </result>
   </test-case>

   <test-case name="error-0945a">
      <description>Error: It is a type error
                        to use the xsl:copy instruction with no select attribute when the context item is absent.
                     </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-06" change="Bug 28419, changed stylesheet to actually call the function to trigger the error"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0945a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0945"/>
      </result>
   </test-case>

   <test-case name="error-0950a">
      <description>Generate error XTTE0950.
Was error-code-304.
It is a type error to use the
                           xsl:copy or xsl:copy-of instruction to
                        copy a node that has namespace-sensitive content if the
                           copy-namespaces attribute has the value no and
                        its explicit or implicit validation attribute has the value
                           preserve. It is also a type error if either of these
                        instructions (with validation="preserve") is used to copy an
                        attribute having namespace-sensitive content, unless the parent element is
                        also copied. A node has namespace-sensitive content if its typed value
                        contains an item of type xs:QName or xs:NOTATION
                        or a type derived therefrom. The reason this is an error is because the
                        validity of the content depends on the namespace context being
                        preserved.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-0950a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0950"/>
      </result>
   </test-case>

   <test-case name="error-0950b">
      <description>Generate error XTTE0950.
Was error-code-305.
It is a type error to use the
                           xsl:copy or xsl:copy-of instruction to
                        copy a node that has namespace-sensitive content if the
                           copy-namespaces attribute has the value no and
                        its explicit or implicit validation attribute has the value
                           preserve. It is also a type error if either of these
                        instructions (with validation="preserve") is used to copy an
                        attribute having namespace-sensitive content, unless the parent element is
                        also copied. A node has namespace-sensitive content if its typed value
                        contains an item of type xs:QName or xs:NOTATION
                        or a type derived therefrom. The reason this is an error is because the
                        validity of the content depends on the namespace context being
                        preserved.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-0950b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0950"/>
      </result>
   </test-case>

   <test-case name="error-0975a">
      <description>Generate error XTSE0975.
Was error-code-306.
It is a static error if the
                     value attribute of xsl:number is present unless
                  the select, level, count, and
                     from attributes are all absent.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0975a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0975"/>
      </result>
   </test-case>

   <test-case name="error-0975b">
      <description>Generate error XTSE0975.
Was error-code-307.
It is a static error if the
                     value attribute of xsl:number is present unless
                  the select, level, count, and
                     from attributes are all absent.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0975b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0975"/>
      </result>
   </test-case>

   <test-case name="error-0975c">
      <description>Generate error XTSE0975.
Was error-code-308.
It is a static error if the
                     value attribute of xsl:number is present unless
                  the select, level, count, and
                     from attributes are all absent.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0975c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0975"/>
      </result>
   </test-case>

   <test-case name="error-0975d">
      <description>Generate error XTSE0975.
Was error-code-309.
It is a static error if the
                     value attribute of xsl:number is present unless
                  the select, level, count, and
                     from attributes are all absent.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0975d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0975"/>
      </result>
   </test-case>

   <test-case name="error-0980a">
      <description>Generate error XTDE0980.
Was error-code-310.
It is a non-recoverable dynamic
                        error if any undiscarded item in the atomized sequence supplied as
                     the value of the value attribute of xsl:number
                     cannot be converted to an integer, or if the resulting integer is less than 0
                     (zero). </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0980a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE0980"/>
      </result>
   </test-case>

   <test-case name="error-0990a">
      <description>Generate error XTTE0990.
Was error-code-311.
It is a type error if the
                        xsl:number instruction is evaluated, with no
                        value or select attribute, when the context item is not a node. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-0990a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE0990"/>
      </result>
   </test-case>

   <test-case name="error-1000a">
      <description>Generate error XTTE1000.
Was error-code-312.
It is a type error if the result of
                     evaluating the select attribute of the xsl:number
                     instruction is anything other than a single node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1000a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1000"/>
      </result>
   </test-case>

   <test-case name="error-1001a">
      <description>Error: It is a dynamic error if the effective value
                     of the start-at attribute of the xsl:number
                     instruction is not in the lexical space of xs:integer. The error may be signaled
                  statically if it can be detected statically.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-06" change="Bug 28420, error has disappeared, should (probably) now be XTSE0020"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1001a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0020"/>
      </result>
   </test-case>

   <test-case name="error-1015a">
      <description>Generate error XTSE1015.
Was error-code-313.
It is a static error if an
                        xsl:sort element with a select attribute has
                     non-empty content.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1015a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1015"/>
      </result>
   </test-case>

   <test-case name="error-1017a">
      <description>Generate error XTSE1017.
Was error-code-314.
It is a static error if an
                        xsl:sort element other than the first in a sequence of
                     sibling xsl:sort elements has a stable
                     attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1017a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1017"/>
      </result>
   </test-case>

   <test-case name="error-1020a">
      <description>Generate error XTTE1020.
Was error-code-315.
If any sort key value, after
                           atomization and any type
                        conversion required by the data-type
                        attribute, is a sequence containing more than one item, then the effect
                        depends on whether the xsl:sort element is processed with XSLT 1.0
                              behavior. With XSLT 1.0 behavior, the effective
                        sort key value is the first item in the sequence. In other cases, this is a
                           type error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20 XSLT30"/>
      </dependencies>
      <test>
         <stylesheet file="error-1020a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1020"/>
      </result>
   </test-case>
   
   <test-case name="error-1020b" covers-40="PR1674">
      <description>Composite sort key - allowed in 4.0</description>
      <created by="Michael Kay" on="2025-06-03"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT40+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1020a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert>/out = "12345"</assert>
      </result>
   </test-case>

   <test-case name="error-1030a">
      <description>Generate error XTDE1030.
Was error-code-316.
It is a non-recoverable dynamic
                           error if, for any sort key
                           component, the set of sort key
                           values evaluated for all the items in the initial sequence, after any type
                        conversion requested, contains a pair of ordinary values for which the
                        result of the XPath lt operator is an error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1030a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1030"/>
      </result>
   </test-case>

   <test-case name="error-1035a">
      <description>Generate error XTDE1035.
Was error-code-317.
It is a non-recoverable dynamic
                           error if the collation attribute of
                           xsl:sort (after resolving against the base URI) is not a
                        URI that is recognized by the implementation as referring to a
                        collation.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1035a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1035"/>
      </result>
   </test-case>

   <test-case name="error-1040a">
      <description>Generate error XTSE1040.
Was error-code-318.
It is a static error if an
                        xsl:perform-sort instruction with a select
                     attribute has any content other than xsl:sort and
                        xsl:fallback instructions.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1040a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1040"/>
      </result>
   </test-case>

   <test-case name="error-1060a">
      <description>Generate error XTSE1060.
Was error-code-319.
It is a static error if the
               current-group function is used within a pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1060a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1060"/>
      </result>
   </test-case>

   <test-case name="error-1061a">
      <description>Error: It is a dynamic error if the
                  current-group function is used when the
                  current group is absent , or when it is invoked
                  in the course of evaluating a pattern. The error
               may be reported statically if it can be detected statically.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1061a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1061"/>
      </result>
   </test-case>

   <test-case name="error-1070a">
      <description>Generate error XTSE1070.
Was error-code-320.
It is a static error if the
                  current-grouping-key function is used within a pattern.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1070a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1070"/>
      </result>
   </test-case>

   <test-case name="error-1071a">
      <description>Error: It is a dynamic error if the
                  current-grouping-key function is used when the
                  current grouping key is absent, or when it is invoked
                     in the course of evaluating a pattern..
               The error may be reported statically if it can be detected statically.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1071a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1071"/>
      </result>
   </test-case>

   <test-case name="error-1071b">
      <description>Error: It is a dynamic error if the
                  current-grouping-key function is used when the
                  current grouping key is absent, or when it is invoked
                     in the course of evaluating a pattern..
               The error may be reported statically if it can be detected statically.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1071b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1071"/>
      </result>
   </test-case>

   <test-case name="error-1080a">
      <description>Generate error XTSE1080.
Was error-code-321.
These four attributes the group-by,
                           group-adjacent, group-starting-with, and
                           group-ending-with attributes of
                           xsl:for-each-group
                      are mutually exclusive: it is a static error if none of these four attributes is present or if
                     more than one of them is present.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1080a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1080"/>
      </result>
   </test-case>

   <test-case name="error-1080b">
      <description>Generate error XTSE1080.
Was error-code-322.
These four attributes the group-by,
                           group-adjacent, group-starting-with, and
                           group-ending-with attributes of
                           xsl:for-each-group
                      are mutually exclusive: it is a static error if none of these four attributes is present or if
                     more than one of them is present.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1080b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1080"/>
      </result>
   </test-case>

   <test-case name="error-1080c">
      <description>Generate error XTSE1080.
Was error-code-323.
These four attributes the group-by,
                           group-adjacent, group-starting-with, and
                           group-ending-with attributes of
                           xsl:for-each-group
                      are mutually exclusive: it is a static error if none of these four attributes is present or if
                     more than one of them is present.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1080c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1080"/>
      </result>
   </test-case>

   <test-case name="error-1090a">
      <description>Generate error XTSE1090.
Was error-code-324.
It is a static error to specify the collation attribute 
                     or the composite attribute if neither the
                        group-by attribute nor group-adjacent attribute is
                     specified.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1090a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1090"/>
      </result>
   </test-case>

   <test-case name="error-1100a">
      <description>Generate error XTTE1100.
Was error-code-325.
It is a type error if the result of
                     evaluating the group-adjacent expression is an empty sequence
                     or a sequence containing more than one item, 
                     unless composite="yes" is specified.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1100a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1100"/>
      </result>
   </test-case>

   <test-case name="error-1100b">
      <description>Generate error XTTE1100.
Was error-code-326.
It is a type error if the result of
                     evaluating the group-adjacent expression is an empty sequence
                     or a sequence containing more than one item, 
                     unless composite="yes" is specified.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1100b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1100"/>
      </result>
   </test-case>

   <test-case name="error-1110a">
      <description>Generate error XTDE1110.
Was error-code-327.
It is a non-recoverable dynamic error if the collation URI specified to
 xsl:for-each-group (after resolving against the base URI)
 is a collation that is not recognized by the implementation.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2015-03-27" change="see bug 28340"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1110a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1110"/>
      </result>
   </test-case>

   <test-case name="error-1120a">
      <description>Generate error XTTE1120.
Was error-code-328.
When the group-starting-with or group-ending-with
                     attribute of the xsl:for-each-group
                        instruction is used, it is a type
                        error if the result of evaluating the select
                     expression contains an item that is not a node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Abel Braaksma"
                on="2013-12-09"
                change="Error code XTTE1120 absent in xslt3.0 spec. Changed dependency to xslt20"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1120a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1120"/>
      </result>
   </test-case>

   <test-case name="error-1130a">
      <description>Generate error XTSE1130.
Was error-code-329.
It is a static error if the
                        xsl:analyze-string instruction contains neither an
                        xsl:matching-substring nor an
                        xsl:non-matching-substring element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1130a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1130"/>
      </result>
   </test-case>

   <test-case name="error-1140a">
      <description>Generate error XTDE1140.
Was error-code-330.
It is a non-recoverable dynamic
                        error if the effective
                        value of the regex attribute of the
                           xsl:analyze-string instruction does not
                     conform to the required syntax for regular expressions, as
                     specified in . If the regular expression is
                     known statically (for example, if the attribute does not contain any expressions enclosed in curly brackets) then
                     the processor may signal the error as a static error. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1140a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1140"/>
      </result>
   </test-case>

   <test-case name="error-1145a">
      <description>Generate error XTDE1145.
Was error-code-331.
It is a non-recoverable dynamic
                        error if the effective
                        value of the flags attribute of the
                           xsl:analyze-string instruction has a value
                     other than the values defined in . If the value
                     of the attribute is known statically (for example, if the attribute does not
                     contain any expressions enclosed in
                     curly brackets) then the processor may signal the error as a
                        static error. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1145a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1145"/>
      </result>
   </test-case>

   <test-case name="error-1150a">
      <description>Generate error XTDE1150. Regex in analyze-string matches zero-length string;
        no longer an error in XSLT 3.0.
Was error-code-332.
It is a non-recoverable dynamic
                        error if the effective
                        value of the regex attribute of the
                           xsl:analyze-string instruction is a
                     regular expression that matches a zero-length string: or more specifically, if
                     the regular expression $r and flags $f are such that
                        matches("", $r, $f) returns true. If the regular expression is
                     known statically (for example, if the attribute does not contain any expressions enclosed in curly brackets) then
                     the processor may signal the error as a static error. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay"
                on="2014-04-01"
                change="changed dependency to XSLT 2.0 only"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1150a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1150"/>
      </result>
   </test-case>

   <test-case name="error-1160a">
      <description>Generate error XTRE1160/XTDE1160.
                  Was error-code-333.
                  
                  XSLT 2.0 text:
                  
                  When a URI reference supplied to the document function contains a
                  fragment identifier, it is a recoverable dynamic error if the media type is not one that is recognized
                  by the processor, or if the fragment identifier does not conform to the
                  rules for fragment identifiers for that media type, or if the fragment
                  identifier selects something other than a sequence of nodes (for example, if
                  it selects a range of characters within a text node). The
                  optional recovery action is to ignore the fragment identifier and return the
                  document node.
                  
                  XSLT 3.0 text:
                  
                  When a URI reference contains a fragment identifier, it is a dynamic error if the media type
                  is not one that is recognized by the processor, or if the fragment identifier does not conform 
                  to the rules for fragment identifiers for that media type, or if the fragment identifier selects 
                  something other than a sequence of nodes (for example, if it selects a range of characters within a text node).

                  A processor may provide an option which, if selected, causes the processor instead of signaling this error, 
                  to ignore the fragment identifier and return the document node.

               </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2014-04-01" change="error code changes in XSLT 3.0"/>
      <modified by="Michael Kay" on="2015-08-12" change="allow processor to take the option of ignoring the fragment identifier"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1160a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
           <error code="XTRE1160"/> <!-- XSLT 2.0 -->            
           <error code="XTDE1160"/> <!-- XSLT 3.0 -->            
           <assert>/out/*:schema</assert> <!-- "Ignore fragment identifier" option, allowed in both 2.0 and 3.0 -->
         </any-of>  
      </result>
   </test-case>

   <test-case name="error-1162a">
      <description>Error: When a URI reference supplied to the
                  document function is a relative reference, 
                  it is a dynamic error 
                  if no base URI is available to resolve the relative reference. This can arise
                  for example when the URI is contained in a node that has no base URI (for example a parentless
                  text node), or when the second argument to the function is a node that has no
                  base URI, or when the base URI from the static context is undefined.
               </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1162a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1162"/>
      </result>
   </test-case>

   <test-case name="error-1162b">
      <description>Error: When a URI reference supplied to the
                  document function is a relative reference, it is a dynamic error 
                  if no base URI is available to resolve the relative reference. This can arise
                  for example when the URI is contained in a node that has no base URI (for example a parentless
                  text node), or when the second argument to the function is a node that has no
                  base URI, or when the base URI from the static context is undefined.
               </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1162b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1162"/>
      </result>
   </test-case>

   <test-case name="error-1205a">
      <description>Generate error XTSE1205.
Was error-code-337.
It is a static error if an
                           xsl:key declaration has a use attribute and
                        has non-empty content, or if it has empty content and no use
                        attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1205a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1205"/>
      </result>
   </test-case>

   <test-case name="error-1205b">
      <description>Generate error XTSE1205.
Was error-code-338.
It is a static error if an
                           xsl:key declaration has a use attribute and
                        has non-empty content, or if it has empty content and no use
                        attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1205b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1205"/>
      </result>
   </test-case>

   <test-case name="error-1210a">
      <description>Generate error XTSE1210.
Was error-code-339.
It is a static error if the xsl:key declaration has a
                           collation attribute whose value (after resolving against the
                        base URI) is not a URI recognized by the implementation as referring to a
                        collation.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1210a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1210"/>
      </result>
   </test-case>

   <test-case name="error-1210b">
      <description>Generate error XTSE1220 (different collations for two keys). May also generate XTSE1210 (unknown collation).
Was error-code-340.
It is a static error if the xsl:key declaration has a
                           collation attribute whose value (after resolving against the
                        base URI) is not a URI recognized by the implementation as referring to a
                        collation.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1210b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE1210"/>
            <error code="XTSE1220"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-1220a">
      <description>Generate error XTSE1220 (different collations for two keys). May also generate XTSE1210 (unknown collation).
Was error-code-340.
It is a static error if there are several xsl:key
                        declarations in the 
                        same package with
                        the same key name and different effective collations. Two collations are the
                        same if their URIs are equal under the rules for comparing
                           xs:anyURI values, or if the implementation can determine
                        that they are different URIs referring to the same collation.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1220a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
            <error code="XTSE1210"/>
            <error code="XTSE1220"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-1222a">
      <description>Error: It is a static error if there are several xsl:key
                        declarations in the stylesheet with
                        the same key name and different effective values for the composite
                        attribute.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1222a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1222"/>
      </result>
   </test-case>

   <test-case name="error-1260a">
      <description>Error: Undeclared key.
Was error-code-069.
It is a non-recoverable dynamic
                  error if the value of the first argument to the
                     key function is not a valid QName,
                  or if there is no namespace declaration in scope for the prefix of the
                  QName, or if the name obtained by expanding the QName is not the same as the
                  expanded name of any xsl:key declaration in the 
                  containing package. If the processor is able to
                  detect the error statically (for example, when the argument is supplied as a
                  string literal), then the processor may optionally signal
                  this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1260a.xsl"/>
      </test>
      <result>
         <error code="XTDE1260"/>
      </result>
   </test-case>

   <test-case name="error-1260b">
      <description>Error: key name is not a valid QName.
Was error-code-070.
It is a non-recoverable dynamic
                  error if the value of the first argument to the
                     key function is not a valid QName,
                  or if there is no namespace declaration in scope for the prefix of the
                  QName, or if the name obtained by expanding the QName is not the same as the
                  expanded name of any xsl:key declaration in the 
                  containing package. If the processor is able to
                  detect the error statically (for example, when the argument is supplied as a
                  string literal), then the processor may optionally signal
                  this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1260b.xsl"/>
      </test>
      <result>
         <error code="XTDE1260"/>
      </result>
   </test-case>

   <test-case name="error-1260c">
      <description>Error: key name uses undeclared prefix.
Was error-code-071.
It is a non-recoverable dynamic
                  error if the value of the first argument to the
                     key function is not a valid QName,
                  or if there is no namespace declaration in scope for the prefix of the
                  QName, or if the name obtained by expanding the QName is not the same as the
                  expanded name of any xsl:key declaration in the 
                  containing package. If the processor is able to
                  detect the error statically (for example, when the argument is supplied as a
                  string literal), then the processor may optionally signal
                  this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1260c.xsl"/>
      </test>
      <result>
         <error code="XTDE1260"/>
      </result>
   </test-case>

   <test-case name="error-1260d">
      <description>Error: xsl:template - undefined key in pattern.
Was error-code-191.
It is a non-recoverable dynamic
                  error if the value of the first argument to the
                     key function is not a valid QName,
                  or if there is no namespace declaration in scope for the prefix of the
                  QName, or if the name obtained by expanding the QName is not the same as the
                  expanded name of any xsl:key declaration in the 
                  containing package. If the processor is able to
                  detect the error statically (for example, when the argument is supplied as a
                  string literal), then the processor may optionally signal
                  this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Abel Braaksma" on="2015-05-31" change="Bug 28653: Allow non-static error result, which, because error is in a pattern, should be ignored"/>
      <environment ref="error152"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1260d.xsl"/>
      </test>
      <result>
         <any-of>
            <assert-message>
               <assert-string-value>Error not detected!</assert-string-value>
            </assert-message>
            <error code="XTDE1260"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-1260e">
      <description>Generate error XTDE1260.
Was error-code-341.
It is a non-recoverable dynamic
                  error if the value of the first argument to the
                     key function is not a valid QName,
                  or if there is no namespace declaration in scope for the prefix of the
                  QName, or if the name obtained by expanding the QName is not the same as the
                  expanded name of any xsl:key declaration in the 
                  containing package. If the processor is able to
                  detect the error statically (for example, when the argument is supplied as a
                  string literal), then the processor may optionally signal
                  this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1260e.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1260"/>
      </result>
   </test-case>

   <test-case name="error-1260f">
      <description>Generate error XTDE1260.
Was error-code-342.
It is a non-recoverable dynamic
                  error if the value of the first argument to the
                     key function is not a valid QName,
                  or if there is no namespace declaration in scope for the prefix of the
                  QName, or if the name obtained by expanding the QName is not the same as the
                  expanded name of any xsl:key declaration in the 
                  containing package. If the processor is able to
                  detect the error statically (for example, when the argument is supplied as a
                  string literal), then the processor may optionally signal
                  this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1260f.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1260"/>
      </result>
   </test-case>

   <test-case name="error-1270a">
      <description>Generate error XTDE1270.
Was error-code-343.
It is a non-recoverable dynamic
                  error to call the key function with two
                  arguments if there is no context
                     node, or if the root of the tree containing the context node is
                  not a document node; or to call the function with three arguments if the
                  root of the tree containing the node supplied in the third argument is not a
                  document node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1270a.xsl"/>
      </test>
      <result>
         <error code="XTDE1270"/>
      </result>
   </test-case>

   <test-case name="error-1270b">
      <description>Generate error XTDE1270.
Was error-code-344.
It is a non-recoverable dynamic
                  error to call the key function with two
                  arguments if there is no context
                     node, or if the root of the tree containing the context node is
                  not a document node; or to call the function with three arguments if the
                  root of the tree containing the node supplied in the third argument is not a
                  document node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1270b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1270"/>
      </result>
   </test-case>

   <test-case name="error-1270c">
      <description>Generate error XTDE1270. Was error-code-345.
                  It is a non-recoverable dynamic
                  error to call the key function with two
                  arguments if there is no context
                  node, or if the root of the tree containing the context node is
                  not a document node; or to call the function with three arguments if the
                  root of the tree containing the node supplied in the third argument is not a
                  document node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1270c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1270"/>
      </result>
   </test-case>
   
   <test-case name="error-1280a-20">
      <description>Error: format-number - unknown xsl:decimal-format name. Was error-code-063.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1280a.xsl"/>
      </test>
      <result>
         <error code="XTDE1280"/>
      </result>
   </test-case>
   
   <test-case name="error-1280a-30">
      <description>Error: format-number - unknown xsl:decimal-format name. Was error-code-063.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1280a.xsl"/>
      </test>
      <result>
         <error code="FODF1280"/>
      </result>
   </test-case>

   <test-case name="error-1280b-20">
      <description>Error: no decimal format.  Was error-code-065.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1280b.xsl"/>
      </test>
      <result>
         <error code="XTDE1280"/>
      </result>
   </test-case>
   
   <test-case name="error-1280b-30">
      <description>Error: no decimal format.  Was error-code-065.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1280b.xsl"/>
      </test>
      <result>
         <error code="FODF1280"/>
      </result>
   </test-case>
   
   <test-case name="error-1280c-20">
      <description>Generate error XTDE1280. Was error-code-346.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Abel Braaksma" on="2013-12-09" change="Error code XTDE1280 is specific to XSLT20 (FODF1280 for XSLT30). Changed dependency to XSLT20"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1280c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1280"/>
      </result>
   </test-case>

   <test-case name="error-1280c-30">
      <description>Generate error FODF1280 (3.0). Was error-code-346b.</description>
      <created by="Abel Braaksma" on="2013-12-09"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1280c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1280"/>
      </result>
   </test-case>

   <test-case name="error-1290a">
      <description>Error: xsl:decimal-format. Was error-code-061.
                     It is a static error if a named or
                     unnamed decimal format contains two
                     conflicting values for the same attribute in different
                     xsl:decimal-format declarations having the same import precedence, unless there is
                     another definition of the same attribute with higher import precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1290a.xsl"/>
      </test>
      <result>
         <error code="XTSE1290"/>
      </result>
   </test-case>

   <test-case name="error-1290b">
      <description>Generate error XTSE1290.
Was error-code-347.
It is a static error if a named or
                     unnamed decimal format contains two
                     conflicting values for the same attribute in different
                        xsl:decimal-format declarations having the same import precedence, unless there is
                     another definition of the same attribute with higher import precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1290b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1290"/>
      </result>
   </test-case>

   <test-case name="error-1295a">
      <description>Generate error XTSE1295.
Was error-code-348.
It is a static error if the character
                     specified in the zero-digit attribute is not a digit or is a digit
                     that does not have the numeric value zero. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1295a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1295"/>
      </result>
   </test-case>

   <test-case name="error-1295b">
      <description>Generate error XTSE1295.
Was error-code-349.
It is a static error if the character
                     specified in the zero-digit attribute is not a digit or is a digit
                     that does not have the numeric value zero. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1295b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1295"/>
      </result>
   </test-case>

   <test-case name="error-1300a">
      <description>Generate error XTSE1300.
Was error-code-350.
It is a static error if, for any named
                     or unnamed decimal format, the variables representing characters used in a
                        picture string do not each have
                     distinct values. These variables are decimal-separator-sign,
                        grouping-sign, percent-sign,
                     per-mille-sign, digit-zero-sign, digit-sign,
                     and pattern-separator-sign.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1300a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1300"/>
      </result>
   </test-case>

   <test-case name="error-1300b">
      <description>Generate error XTSE1300.
Was error-code-351.
                     It is a static error if, for any named
                     or unnamed decimal format, the variables representing characters used in a
                     picture string do not each have
                     distinct values. These variables are decimal-separator-sign,
                     grouping-sign, percent-sign,
                     per-mille-sign, digit-zero-sign, digit-sign,
                     and pattern-separator-sign.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1300b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1300"/>
      </result>
   </test-case>

   <test-case name="error-1300c">
      <description>Generate error XTSE1300. Was error-code-352.
                     It is a static error if, for any named
                     or unnamed decimal format, the variables representing characters used in a
                     picture string do not each have
                     distinct values. These variables are decimal-separator-sign,
                     grouping-sign, percent-sign,
                     per-mille-sign, digit-zero-sign, digit-sign,
                     and pattern-separator-sign.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1300c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1300"/>
      </result>
   </test-case>
   
      <test-case name="error-1310a-20">
      <description>Generate error XTDE1310. Was  error-code-353a.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1310"/>
      </result>
   </test-case>
   
   <test-case name="error-1310a-30">
      <description>Generate error FODF1310 (3.0). Was error-code-353b.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1310"/>
      </result>
   </test-case>

   <test-case name="error-1310b-20">
      <description>Generate error XTDE1310. Was error-code-354.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1310"/>
      </result>
   </test-case>
   
   <test-case name="error-1310b-30">
      <description>Generate error FODF1310 (3.0). Was error-code-354</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1310"/>
      </result>
   </test-case>

   <test-case name="error-1310c-20">
      <description>Generate error XTDE1310. Was error-code-355.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1310"/>
      </result>
   </test-case>
   
   <test-case name="error-1310c-30">
      <description>Generate error FODF1310 (3.0). Was error-code-355.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1310"/>
      </result>
   </test-case>

   <test-case name="error-1310d-20">
      <description>Generate error XTDE1310. Was error-code-356.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1310"/>
      </result>
   </test-case>
   
   <test-case name="error-1310d-30">
      <description>Generate error FODF1310 (3.0). Was error-code-356.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2012-12-14" change="Fixed spec dependency"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1310"/>
      </result>
   </test-case>

   <test-case name="error-1310e-20">
      <description>Generate error XTDE1310. Was error-code-357.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310e.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1310"/>
      </result>
   </test-case>
   
   <test-case name="error-1310e-30">
      <description>Generate error FODF1310 (3.0). Was error-code-357.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="John Lumley" on="2014-09-05" change="Corrected stsylesheet reference"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <!--<stylesheet file="error-code-357.xsl"/>-->
         <stylesheet file="error-1310e.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1310"/>
      </result>
   </test-case>

   <test-case name="error-1310f-20">
      <description>Generate error XTDE1310. Was error-code-358.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310f.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1310"/>
      </result>
   </test-case>
   
   <test-case name="error-1310f-30">
      <description>Generate error FODF1310 (3.0). Was error-code-358.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310f.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1310"/>
      </result>
   </test-case>

   <test-case name="error-1310g-20">
      <description>Generate error XTDE1310. Was error-code-359.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310g.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1310"/>
      </result>
   </test-case>
   
   <test-case name="error-1310g-30">
      <description>Generate error FODF1310 (3.0). Was error-code-359.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310g.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1310"/>
      </result>
   </test-case>

   <test-case name="error-1310h-20">
      <description>Generate error XTDE1310. Was error-code-360.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310h.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1310"/>
      </result>
   </test-case>
   
   <test-case name="error-1310h-30">
      <description>Generate error FODF 1310 (3.0). Was error-code-360.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310h.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1310"/>
      </result>
   </test-case>

   <test-case name="error-1310i-20">
      <description>Generate error XTDE1310. Was error-code-361.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310i.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1310"/>
      </result>
   </test-case>
   
   <test-case name="error-1310i-30">
      <description>Generate error FODF1310 (3.0). Was error-code-361.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1310i.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FODF1310"/>
      </result>
   </test-case>

   <test-case name="error-1360a">
      <description>Generate error XTDE1360. Was error-code-364.
                  If the current function is evaluated within an
                  expression that is evaluated when the context item is absent, a non-recoverable dynamic error
                  occurs.
      </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1360a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1360"/>
      </result>
   </test-case>
   
   <test-case name="error-1360b">
      <description>A dynamic call to the current() function is a dynamic error
      </description>
      <created by="Michael Kay" on="2015-02-07"/>
      <modified by="Abel Braaksma" on="2015-04-08" change="Bug 28438, uses function items, 2.0 --> 3.0"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1360b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1360"/>
      </result>
   </test-case>

   <test-case name="error-1370a">
      <description>Generate error XTDE1370. Was error-code-365.
                  It is a non-recoverable dynamic
                  error if the unparsed-entity-uri function
                  is called when there is no context
                  node, or when the root of the tree containing the context node
                  is not a document node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2016-03-18" change="Add DTD dependency"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="dtd"/>
      </dependencies>
      <test>
         <stylesheet file="error-1370a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1370"/>
      </result>
   </test-case>

   <test-case name="error-1370b">
      <description>Generate error XTDE1370.
Was error-code-366.
It is a non-recoverable dynamic
                  error if the unparsed-entity-uri function
                  is called when there is no context
                     node, or when the root of the tree containing the context node
                  is not a document node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2016-03-18" change="Add DTD dependency"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="dtd"/>
      </dependencies>
      <test>
         <stylesheet file="error-1370b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1370"/>
      </result>
   </test-case>

   <test-case name="error-1380a">
      <description>Generate error XTDE1380.
Was error-code-367.
It is a non-recoverable dynamic
                  error if the unparsed-entity-public-id
                  function is called when there is no context
                     node, or when the root of the tree containing the context node
                  is not a document node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2016-03-18" change="Add DTD dependency"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="dtd"/>
      </dependencies>
      <test>
         <stylesheet file="error-1380a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1380"/>
      </result>
   </test-case>

   <test-case name="error-1380b">
      <description>Generate error XTDE1380.
Was error-code-368.
It is a non-recoverable dynamic
                  error if the unparsed-entity-public-id
                  function is called when there is no context
                     node, or when the root of the tree containing the context node
                  is not a document node.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2016-03-18" change="Add DTD dependency"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="dtd"/>
      </dependencies>
      <test>
         <stylesheet file="error-1380b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1380"/>
      </result>
   </test-case>

   <test-case name="error-1390a">
      <description>Generate error XTDE1390.
Was error-code-369.
It is a non-recoverable dynamic
                  error if the value supplied as the
                     $property-name argument to the
                     system-property function is not a
                  valid QName, or if there is no namespace declaration in scope for the prefix
                  of the QName. If the processor is able to detect the error statically (for
                  example, when the argument is supplied as a string literal), then the
                  processor may optionally signal this as a static error. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1390a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1390"/>
      </result>
   </test-case>

   <test-case name="error-1390b">
      <description>Generate error XTDE1390.
Was error-code-370.
It is a non-recoverable dynamic
                  error if the value supplied as the
                     $property-name argument to the
                     system-property function is not a
                  valid QName, or if there is no namespace declaration in scope for the prefix
                  of the QName. If the processor is able to detect the error statically (for
                  example, when the argument is supplied as a string literal), then the
                  processor may optionally signal this as a static error. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1390b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1390"/>
      </result>
   </test-case>

   <test-case name="error-1390c">
      <description>Generate error XTDE1390.
Was error-code-371.
It is a non-recoverable dynamic
                  error if the value supplied as the
                     $property-name argument to the
                     system-property function is not a
                  valid QName, or if there is no namespace declaration in scope for the prefix
                  of the QName. If the processor is able to detect the error statically (for
                  example, when the argument is supplied as a string literal), then the
                  processor may optionally signal this as a static error. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1390c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1390"/>
      </result>
   </test-case>

   <test-case name="error-1400a">
      <description>Generate error XTDE1400.
Was error-code-372.
It is a non-recoverable dynamic
                  error if the argument passed to the
                     function-available function does
                  not evaluate to a string that is a valid EQName, or if the value is a lexical QName
                  with a prefix for which no namespace declaration is present in the static context. If the processor
                  is able to detect the error statically (for example, when the argument is
                  supplied as a string literal), then the processor may
                  optionally signal this as a static
                     error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1400a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1400"/>
      </result>
   </test-case>

   <test-case name="error-1400b">
      <description>Generate error XTDE1400.
Was error-code-373.
It is a non-recoverable dynamic
                  error if the argument passed to the
                     function-available function does
                  not evaluate to a string that is a valid EQName, or if the value is a lexical QName
                  with a prefix for which no namespace declaration is present in the static context. If the processor
                  is able to detect the error statically (for example, when the argument is
                  supplied as a string literal), then the processor may
                  optionally signal this as a static
                     error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1400b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1400"/>
      </result>
   </test-case>
   
   <test-case name="error-1400c">
      <description>Generate error XTDE1400.
         Was error-code-373.
         function-available() with an argument computed at run-time, not a valid lexical NCName</description>
      <created by="Michael Kay" on="2019-01-25"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1400c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1400"/>
      </result>
   </test-case>

   <test-case name="error-1420a">
      <description>Error: It is a non-recoverable dynamic
                           error if the arguments supplied to a call on an extension
                        function do not satisfy the rules defined for that particular extension
                        function, or if the extension function reports an error, or if the result of
                        the extension function cannot be converted to an XPath value.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1420a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1420"/>
      </result>
   </test-case>

   <test-case name="error-1425a">
      <description>Error: When the containing element is processed with
                              XSLT 1.0
                           behavior, it is a non-recoverable dynamic error to
                        evaluate an extension function call if no implementation of the extension
                        function is available.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="backwards_compatibility"/>
      </dependencies>
      <test>
         <stylesheet file="error-1425a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1425"/>
      </result>
   </test-case>

   <test-case name="error-1428a">
      <description>Error: It is a non-recoverable dynamic
                  error if the argument passed to the
                     type-available function does
                  not evaluate to a string that is a valid EQName, or if the value is a lexical QName
                  with a prefix for which no namespace declaration is present in the static context. If the processor is
                  able to detect the error statically (for example, when the argument is
                  supplied as a string literal), then the processor may
                  optionally signal this as a static
                     error.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1428a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1428"/>
      </result>
   </test-case>

   <test-case name="error-1430a">
      <description>Generate error XTSE1430.
Was error-code-374.
It is a static error if there is no
                        namespace bound to the prefix on the element bearing the
                           [xsl:]extension-element-prefixes attribute or, when
                           #default is specified, if there is no default namespace.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1430a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1430"/>
      </result>
   </test-case>

   <test-case name="error-1440a">
      <description>Generate error XTDE1440.
Was error-code-375.
It is a non-recoverable dynamic
            error if the argument passed to the
               element-available function does not
            evaluate to a string that is a valid EQName, or if the value is a lexical QName
            with a prefix for which no namespace declaration is present in the static context. If the processor is
            able to detect the error statically (for example, when the argument is
            supplied as a string literal), then the processor may
            optionally signal this as a static
               error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1440a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1440"/>
      </result>
   </test-case>

   <test-case name="error-1440b">
      <description>Generate error XTDE1440.
Was error-code-376.
It is a non-recoverable dynamic
            error if the argument passed to the
               element-available function does not
            evaluate to a string that is a valid EQName, or if the value is a lexical QName
            with a prefix for which no namespace declaration is present in the static context. If the processor is
            able to detect the error statically (for example, when the argument is
            supplied as a string literal), then the processor may
            optionally signal this as a static
               error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1440b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1440"/>
      </result>
   </test-case>

   <test-case name="error-1450a">
      <description>Test no xsl:fallback for an unknown extension element..
Was error-code-161.
When a processor performs fallback for
                        an extension instruction
                        that is not recognized, if the instruction element has one or more
                           xsl:fallback children, then the content of each of the
                           xsl:fallback children must be
                        evaluated; it is a non-recoverable
                           dynamic error if it has no xsl:fallback
                        children.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1450a.xsl"/>
      </test>
      <result>
         <error code="XTDE1450"/>
      </result>
   </test-case>

   <test-case name="error-1450b">
      <description>Generate error XTDE1450.
Was error-code-378.
When a processor performs fallback for
                        an extension instruction
                        that is not recognized, if the instruction element has one or more
                           xsl:fallback children, then the content of each of the
                           xsl:fallback children must be
                        evaluated; it is a non-recoverable
                           dynamic error if it has no xsl:fallback
                        children.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1450b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1450"/>
      </result>
   </test-case>

   <test-case name="error-1460a">
      <description>Test xsl:result-document with unknown format.
Was error-code-172.
It is a non-recoverable dynamic
                        error if the effective
                        value of the format attribute of an
                           xsl:result-document element is not a valid
                        EQName, or if it does not
                     match the expanded QName of an
                        output definition in the
                        stylesheet. If the processor is able
                     to detect the error statically (for example, when the format
                     attribute contains no curly brackets), then the processor
                        may optionally signal this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1460a.xsl"/>
      </test>
      <result>
         <error code="XTDE1460"/>
      </result>
   </test-case>

   <test-case name="error-1460b">
      <description>Generate error XTDE1460.
Was error-code-379.
It is a non-recoverable dynamic
                        error if the effective
                        value of the format attribute of an
                           xsl:result-document element is not a valid
                        EQName, or if it does not
                     match the expanded QName of an
                        output definition in the
                        stylesheet. If the processor is able
                     to detect the error statically (for example, when the format
                     attribute contains no curly brackets), then the processor
                        may optionally signal this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1460b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1460"/>
      </result>
   </test-case>

   <test-case name="error-1460c">
      <description>Generate error XTDE1460.
Was error-code-380.
It is a non-recoverable dynamic
                        error if the effective
                        value of the format attribute of an
                           xsl:result-document element is not a valid
                        EQName, or if it does not
                     match the expanded QName of an
                        output definition in the
                        stylesheet. If the processor is able
                     to detect the error statically (for example, when the format
                     attribute contains no curly brackets), then the processor
                        may optionally signal this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1460c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1460"/>
      </result>
   </test-case>

   <test-case name="error-1460d">
      <description>Generate error XTDE1460.
                   Was error-code-381.
                        It is a non-recoverable dynamic
                        error if the effective value of the format attribute of an
                        xsl:result-document element is not a valid
                        EQName, or if it does not match the expanded QName of an
                        output definition in the stylesheet. If the processor is able
                        to detect the error statically (for example, when the format
                        attribute contains no curly brackets), then the processor
                        may optionally signal this as a static error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2016-03-18" change="A processor that is not serializing may ignore the format attribute"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="serialization"/>
      </dependencies>
      <test>
         <stylesheet file="error-1460d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
            <error code="XTDE0290"/>
            <error code="XTDE1460"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-1480a">
      <description>Generate error XTDE1480.
Was error-code-382.
It is a non-recoverable dynamic
                        error to evaluate the xsl:result-document
                     instruction in temporary output
                        state.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1480a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1480"/>
      </result>
   </test-case>

   <test-case name="error-1480b">
      <description>Generate error XTDE1480.
Was error-code-383.
It is a non-recoverable dynamic
                        error to evaluate the xsl:result-document
                     instruction in temporary output
                        state.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1480b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1480"/>
      </result>
   </test-case>

   <test-case name="error-1490a">
      <description>Test xsl:result-document writing twice to same destination.
Was error-code-186.
It is a non-recoverable dynamic
                        error for a transformation to generate two or more final result trees with the same
                     URI.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1490a.xsl"/>
      </test>
      <result>
         <error code="XTDE1490"/>
      </result>
   </test-case>

   <test-case name="error-1490b">
      <description>Generate error XTDE1490.
Was error-code-384.
It is a non-recoverable dynamic
                        error for a transformation to generate two or more final result trees with the same
                     URI.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1490b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1490"/>
      </result>
   </test-case>

   <test-case name="error-1490c">
      <description>Attempt to write twice to implicit final result tree.
Was error-code-411.
It is a non-recoverable dynamic
                        error for a transformation to generate two or more final result trees with the same
                     URI.</description>
      <created by="Colin Adams" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1490c.xsl"/>
         <initial-template name="initial"/>
      </test>
      <result>
         <error code="XTDE1490"/>
      </result>
   </test-case>

   <test-case name="error-1495a">
      <description>
         NOTE: this error has disappeared from the spec, in 2.0 it was a recoverable error XTRE1495.
         See also: https://lists.w3.org/Archives/Member/w3c-xsl-wg/2012Oct/0038.html
         
         Error: It is a recoverable dynamic error
                     for a transformation to generate two or more final result trees with URIs that
                     identify the same physical resource. The optional recovery action is
                        implementation-dependent, since it may be impossible for the
                     processor to detect the error.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="The test threw XTDE1495 through an xsl:message, but test expected XTRE1495. Error is not in the spec anymore."/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1495a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1495"/>
      </result>
   </test-case>

   <test-case name="error-1500a">
      <description>Error: It is a recoverable dynamic error
                     for a stylesheet to write to an external
                     resource and read from the same resource during a single transformation,
                     if the same absolute URI is used to access the resource in both cases.
                        
                  </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2018-09-25" change="The data file error-1500a.xml was empty, so the wrong error was thrown"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1500a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1500"/>
      </result>
   </test-case>

   <test-case name="error-1505a">
      <description>Generate error XTSE1505.
Was error-code-386.
It is a static error if both the
                        [xsl:]type and [xsl:]validation attributes are
                     present on the xsl:element, xsl:attribute,
                        xsl:copy, xsl:copy-of,
                        xsl:document, or xsl:result-document
                     instructions, or on a literal result
                        element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1505a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1505"/>
      </result>
   </test-case>

   <test-case name="error-1505b">
      <description>Generate error XTSE1505.
Was error-code-387.
It is a static error if both the
                        [xsl:]type and [xsl:]validation attributes are
                     present on the xsl:element, xsl:attribute,
                        xsl:copy, xsl:copy-of,
                        xsl:document, or xsl:result-document
                     instructions, or on a literal result
                        element.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1505b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1505"/>
      </result>
   </test-case>

   <test-case name="error-1510a">
      <description>Originally designed to generate error XTDE0485, but this was removed by erratum E16.
Was error-code-239.
If the validation attribute of an
                              xsl:element, xsl:attribute,
                              xsl:copy, xsl:copy-of, or
                              xsl:result-document instruction, or the
                              xsl:validation attribute of a literal result element, has
                           the effective value strict, and schema validity assessment
                           concludes that the validity of the element or attribute is invalid or
                           unknown, a type error occurs. As with other type errors, the error
                              may be signaled statically if it can be detected
                           statically. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1510a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1510"/>
      </result>
   </test-case>

   <test-case name="error-1510b">
      <description>Generate error XTTE1510.
Was error-code-388.
If the validation attribute of an
                              xsl:element, xsl:attribute,
                              xsl:copy, xsl:copy-of, or
                              xsl:result-document instruction, or the
                              xsl:validation attribute of a literal result element, has
                           the effective value strict, and schema validity assessment
                           concludes that the validity of the element or attribute is invalid or
                           unknown, a type error occurs. As with other type errors, the error
                              may be signaled statically if it can be detected
                           statically. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1510b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1510"/>
      </result>
   </test-case>

   <test-case name="error-1510c">
      <description>Generate error XTTE1510.
Was error-code-389.
If the validation attribute of an
                              xsl:element, xsl:attribute,
                              xsl:copy, xsl:copy-of, or
                              xsl:result-document instruction, or the
                              xsl:validation attribute of a literal result element, has
                           the effective value strict, and schema validity assessment
                           concludes that the validity of the element or attribute is invalid or
                           unknown, a type error occurs. As with other type errors, the error
                              may be signaled statically if it can be detected
                           statically. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1510c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1510"/>
      </result>
   </test-case>

   <test-case name="error-1512a">
      <description>Generate error XTTE1512.
Was error-code-390.
If the validation attribute of an
                              xsl:element, xsl:attribute,
                              xsl:copy, xsl:copy-of, or
                              xsl:result-document instruction, or the
                              xsl:validation attribute of a literal result element, has
                           the effective value strict, and there is no matching
                           top-level declaration in the schema, then a type error occurs. As with
                           other type errors, the error may be signaled
                           statically if it can be detected statically. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1512a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1512"/>
      </result>
   </test-case>

   <test-case name="error-1515a">
      <description>Generate error XTTE1512.
Was error-code-391.
If the validation attribute of an
                              xsl:element, xsl:attribute,
                              xsl:copy, xsl:copy-of, or
                              xsl:result-document instruction, or the
                              xsl:validation attribute of a literal result element, has
                           the effective value lax, and schema validity assessment
                           concludes that the element or attribute is invalid, a type error occurs.
                           As with other type errors, the error may be signaled
                           statically if it can be detected statically. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1515a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1515"/>
      </result>
   </test-case>

   <test-case name="error-1520a">
      <description>Generate error XTSE1520.
Was error-code-392.
It is a static error if the
                           value of the type attribute of an
                              xsl:element, xsl:attribute,
                              xsl:copy, xsl:copy-of,
                              xsl:document, or xsl:result-document
                           instruction, or the xsl:type attribute of a literal result
                           element, is not a valid QName, or if it uses a prefix that
                           is not defined in an in-scope namespace declaration, or if the QName is
                           not the name of a type definition included in the in-scope schema
                              components for the stylesheet.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1520a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1520"/>
      </result>
   </test-case>

   <test-case name="error-1520b">
      <description>Generate error XTSE1520.
Was error-code-393.
It is a static error if the
                           value of the type attribute of an
                              xsl:element, xsl:attribute,
                              xsl:copy, xsl:copy-of,
                              xsl:document, or xsl:result-document
                           instruction, or the xsl:type attribute of a literal result
                           element, is not a valid QName, or if it uses a prefix that
                           is not defined in an in-scope namespace declaration, or if the QName is
                           not the name of a type definition included in the in-scope schema
                              components for the stylesheet.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1520b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1520"/>
      </result>
   </test-case>

   <test-case name="error-1520c">
      <description>Generate error XTSE1520.
Was error-code-394.
It is a static error if the
                           value of the type attribute of an
                              xsl:element, xsl:attribute,
                              xsl:copy, xsl:copy-of,
                              xsl:document, or xsl:result-document
                           instruction, or the xsl:type attribute of a literal result
                           element, is not a valid QName, or if it uses a prefix that
                           is not defined in an in-scope namespace declaration, or if the QName is
                           not the name of a type definition included in the in-scope schema
                              components for the stylesheet.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1520c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1520"/>
      </result>
   </test-case>

   <test-case name="error-1530a">
      <description>Generate error XTSE1530.
Was error-code-395.
It is a static error if the
                           value of the type attribute of an
                              xsl:attribute instruction refers to a complex type
                           definition</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1530a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1530"/>
      </result>
   </test-case>

   <test-case name="error-1535a">
      <description>Error: It is a type error if the
                           value of the type attribute of an
                           xsl:copy or xsl:copy-of instruction 
                           refers to a complex type definition and one or more of the items being copied
                           is an attribute node.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Test should be schema-aware"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1535a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1535"/>
      </result>
   </test-case>
   

   <test-case name="error-1535b">
      <description>
         Variant of prev. test for non-schema-aware processors (other error expected: XTSE1650)
         Error: It is a type error if the
                           value of the type attribute of an
                           xsl:copy or xsl:copy-of instruction 
                           refers to a complex type definition and one or more of the items being copied
                           is an attribute node.</description>
      <created by="Abel Braaksma" on="2015-04-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware" satisfied="false" />
      </dependencies>
      <test>
         <stylesheet file="error-1535a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1650"/>
      </result>
   </test-case>

   <test-case name="error-1540a">
      <description>Generate error XTTE1540.
Was error-code-396.
It is a type error if an
                              [xsl:]type attribute is defined for a constructed element
                           or attribute, and the outcome of schema validity assessment against that
                           type is that the validity property of that element or
                           attribute information item is other than valid.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1540a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1540"/>
      </result>
   </test-case>

   <test-case name="error-1545a">
      <description>Generate error XTTE1545.
Was error-code-397.
A type error occurs if a
                              type or validation attribute is defined
                           (explicitly or implicitly) for an instruction that constructs a new
                           attribute node, if the effect of this is to cause the attribute value to
                           be validated against a type that is derived from, or constructed by list
                           or union from, the primitive types xs:QName or
                              xs:NOTATION.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1545a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1545"/>
      </result>
   </test-case>

   <test-case name="error-1550a">
      <description>Generate error XTTE1550.
Was error-code-398.
A type error occurs
                                 when a document node is validated unless
                              the children of the document node comprise exactly one element node,
                              no text nodes, and zero or more comment and processing instruction
                              nodes, in any order.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1550a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1550"/>
      </result>
   </test-case>

   <test-case name="error-1550b">
      <description>Generate error XTTE1550.
Was error-code-399.
A type error occurs
                                 when a document node is validated unless
                              the children of the document node comprise exactly one element node,
                              no text nodes, and zero or more comment and processing instruction
                              nodes, in any order.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1550b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1550"/>
      </result>
   </test-case>

   <test-case name="error-1555a">
      <description>Generate error XTTE1555.
Was error-code-400.
It is a type error if, when
                        validating a document node, document-level constraints (such as ID/IDREF constraints) are not satisfied.
                        
                        These constraints include identity constraints (xs:unique,
                           xs:key, and xs:keyref) and ID/IDREF
                        constraints.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1555a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1555"/>
      </result>
   </test-case>

   <test-case name="error-1555b">
      <description>Generate error XTTE1555.
Was error-code-401.
It is a type error if, when
                        validating a document node, document-level constraints (such as ID/IDREF constraints) are not satisfied.
                        
                        These constraints include identity constraints (xs:unique,
                           xs:key, and xs:keyref) and ID/IDREF
                        constraints.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1555b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1555"/>
      </result>
   </test-case>

   <test-case name="error-1555c">
      <description>Generate error XTTE1555.
Was error-code-402.
It is a type error if, when validating a document node, document-level constraints (such as ID/IDREF constraints) are not satisfied.
These constraints include identity constraints (xs:unique, xs:key, and xs:keyref) and ID/IDREF constraints.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Michael Kay" on="2018-09-26" change="key/unique/keyref are not document-level constraints and do not generate XTTE1555"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-1555c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE1510"/>
      </result>
   </test-case>

   <test-case name="error-1560a">
      <description>Generate error XTSE1560.
Was error-code-403.
It is a static error if two
                     xsl:output declarations within an output definition specify explicit values
                  for the same attribute (other than cdata-section-elements and
                     use-character-maps), with the values of the attributes being not
                  equal, unless there is another xsl:output declaration within the
                  same output definition that has
                  higher import precedence and that specifies an explicit value for the same
                  attribute. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1560a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1560"/>
      </result>
   </test-case>

   <test-case name="error-1560b">
      <description>Generate error XTSE1560.
Was error-code-404.
It is a static error if two
                     xsl:output declarations within an output definition specify explicit values
                  for the same attribute (other than cdata-section-elements and
                     use-character-maps), with the values of the attributes being not
                  equal, unless there is another xsl:output declaration within the
                  same output definition that has
                  higher import precedence and that specifies an explicit value for the same
                  attribute. </description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1560b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1560"/>
      </result>
   </test-case>

   <test-case name="error-1570a">
      <description>Generate error XTSE1570.
Was error-code-405.
The value of the method attribute on
                        xsl:output
                  
                  must (if present) be a valid EQName. If it is a lexical QName with no
                  a prefix, then it identifies a method specified in  and must be one of
                     xml, html, xhtml, or
                  text.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1570a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1570"/>
      </result>
   </test-case>

   <test-case name="error-1580a">
      <description>Generate error XTSE1580.
Was error-code-406.
It is a static error if the stylesheet contains two or more character maps
                     with the same name and the same import
                        precedence, unless it also contains another character map with the
                     same name and higher import precedence.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1580a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1580"/>
      </result>
   </test-case>

   <test-case name="error-1590a">
      <description>Generate error XTSE1590.
Was error-code-407.
It is a static error if a name in the
                        use-character-maps attribute of the xsl:output
                     or xsl:character-map elements does not match the
                        name attribute of any xsl:character-map in the
                        stylesheet.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1590a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1590"/>
      </result>
   </test-case>

   <test-case name="error-1600a">
      <description>Generate error XTSE1600.
Was error-code-408.
It is a static error if a character
                     map references itself, directly or indirectly, via a name in the
                        use-character-maps attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-1600a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1600"/>
      </result>
   </test-case>

   <test-case name="error-1620a">
      <description>Error (XSLT 2.0 only): It is a recoverable dynamic error
                     if an xsl:value-of or xsl:text instruction
                     specifies that output escaping is to be disabled and the implementation does
                     not support this. The optional recovery action is to ignore the
                     disable-output-escaping attribute.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-03-30" change="
         Bug 23896
         - Fix to allow for optional recovery,
         - added serialize=yes
         - added 3.0 version output-1620b"/>
      <modified by="Abel Braaksma" on="2015-04-08" change="Bug 28439, changed assertion to assert-xml, no need to check exact serialization"/>
      <dependencies>
         <spec value="XSLT20"/>
         <feature value="disabling_output_escaping" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1620a.xsl"/>
         <initial-template name="main"/>
         <output serialize="yes" />
      </test>
      <result>
         <any-of>
            <!-- recovery option -->
            <assert-xml><![CDATA[<out>&lt;a/&gt;</out>]]></assert-xml>
            <!-- or raise error -->
            <error code="XTRE1620"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-1620b">
      <description>
         Test that error XTRE1620 is NOT thrown in XSLT 3.0 when it does not support d-o-e and serialization is ON
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <modified by="Abel Braaksma" on="2015-04-08" change="Bug 28439, changed assertion to assert-xml, no need to check exact serialization"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="disabling_output_escaping" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1620a.xsl"/>
         <initial-template name="main"/>
         <output serialize="yes" />
      </test>
      <result>
         <assert-xml><![CDATA[<out>&lt;a/&gt;</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="error-1630a">
      <description>Error (XSLT 2.0 only): It is a recoverable dynamic error
                     if an xsl:value-of or xsl:text instruction
                     specifies that output escaping is to be disabled when writing to a final result tree that is not being
                     serialized. The optional recovery action is to ignore the
                     disable-output-escaping attribute.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-03-30" change="
         Bug 23896
         - Fix to allow for optional recovery,
         - added serialize=no (was a TODO marking)
         - added 3.0 version output-1630b"/>
      <modified by="Abel Braaksma" on="2015-04-08" change="Bug 28439, omit xml declaration in serialized result"/>
      <dependencies>
         <spec value="XSLT20"/>
         <feature value="disabling_output_escaping" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1630a.xsl"/>
         <initial-template name="main"/>
         <output serialize="no"/>
      </test>
      <result>
         <any-of>
            <!-- recovery option -->
            <assert-xml><![CDATA[<out>&lt;a/&gt;</out>]]></assert-xml>
            <!-- or raise error -->
            <error code="XTRE1630"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-1630b">
      <description>
         Not an error (XSLT 3.0+ only), test that this error is NOT thrown when serializing is OFF and d-o-e is not supported.
      </description>
      <created by="Abel Braaksma" on="2015-03-30"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="disabling_output_escaping" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1630a.xsl"/>
         <initial-template name="main"/>
         <output serialize="no"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>&lt;a/&gt;</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="error-1650a">
      <description>Error: A non-schema-aware processor
                     must signal a static error if the stylesheet
                     includes an xsl:import-schema declaration.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1650a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1650"/>
      </result>
   </test-case>

   <test-case name="error-1660a">
      <description>Error: A non-schema-aware processor must signal a static error if the stylesheet
                     includes an [xsl:]type attribute, or an [xsl:]validation or default-validation attribute
                     with a value other than strip, preserve, or lax.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Error in stylesheet, namespace prefix not declared, fixed" />
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1660a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1660"/>
      </result>
   </test-case>
   
   <test-case name="error-1660b">
      <description>Error: A non-schema-aware processor must signal a static error if the stylesheet
         includes an [xsl:]type attribute, or an [xsl:]validation or default-validation attribute
         with a value other than strip, preserve, or lax.</description>
      <created by="Michael Kay" on="2019-12-18"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1660b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1660"/>
      </result>
   </test-case>
   
   <test-case name="error-1660c">
      <description>Error: A non-schema-aware processor must signal a static error if the stylesheet
         includes an [xsl:]type attribute, or an [xsl:]validation or default-validation attribute
         with a value other than strip, preserve, or lax.</description>
      <created by="Michael Kay" on="2019-12-18"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1660c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1660"/>
      </result>
   </test-case>
   
   <test-case name="error-1660d">
      <description>Error: A non-schema-aware processor must signal a static error if the stylesheet
         includes an [xsl:]type attribute, or an [xsl:]validation or default-validation attribute
         with a value other than strip, preserve, or lax.</description>
      <created by="Michael Kay" on="2019-12-18"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1660d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1660"/>
      </result>
   </test-case>
   
   <test-case name="error-1660e">
      <description>Error: A non-schema-aware processor must signal a static error if the stylesheet
         includes an [xsl:]type attribute, or an [xsl:]validation or default-validation attribute
         with a value other than strip, preserve, or lax.</description>
      <created by="Michael Kay" on="2019-12-18"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-1660e.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE1660"/>
      </result>
   </test-case>

   <test-case name="error-1665a">
      <description>Error: A non-schema-aware processor
                     must raise a non-recoverable dynamic error if the input to the processor
                     includes a node with a type annotation
                     other than xs:untyped or xs:untypedAtomic, or an
                     atomic value of a type other than those which a basic XSLT processor
                     supports.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Bug 28421, no source specified, and this error is unraisable in a processor-independent way, fixed with xsl:assert"/>
      <modified by="Michael Kay" on="2019-11-19" change="Only raises an error if assertions are enabled"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware" satisfied="false"/>
         <enable_assertions/>
      </dependencies>
      <test>
         <stylesheet file="error-1665a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE1665"/>
      </result>
   </test-case>

   <test-case name="error-2200a">
      <description>Error: It is a static error if the number of xsl:merge-key children of a
                        xsl:merge-source element is not equal to the number of
                        xsl:merge-key children of another xsl:merge-source child of the same
                        xsl:merge instruction.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-2200a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE2200"/>
      </result>
   </test-case>

   <test-case name="error-2210a">
      <description>Error: It is a dynamic error if there are two
                        xsl:merge-key elements that occupy corresponding positions
                     among the xsl:merge-key children of two different
                        xsl:merge-source elements and that have differing effective values for any of the
                     attributes lang, order, collation,
                        case-order, or data-type. Values are considered to differ
                     if the attribute is present on one element and not on the other, or if
                     it is present on both elements with effective
                        values that are not equal to each other. In the case of the
                        collation attribute, the values are compared as absolute URIs
                        after resolving against the base URI.The error may be reported statically if it is detected statically.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-2210a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE2210"/>
      </result>
   </test-case>

   <test-case name="error-2220a">
      <description>Error: It is a dynamic error if any input
                     sequence to an xsl:merge instruction contains two items that
                     are not correctly sorted according to the merge key values defined on the
                        xsl:merge-key children of the corresponding
                        xsl:merge-source element, when compared using the collation
                     rules defined by the attributes of the corresponding
                        xsl:merge-key children of the xsl:merge
                     instruction, unless the attribute sort-before-merge is present
                  with the value yes.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Bug 28422, merge source was not referenced, which may result in not raising the error. Fixed with current-merge-group"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-2220a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE2220"/>
      </result>
   </test-case>

   <test-case name="error-2230a">
      <description>Error: It is a type error if some item selected
                     by a particular merge key in one input sequence is not comparable using the
                     XPath le operator with some item selected by the corresponding
                     sort key in another input sequence.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-2230a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE2230"/>
      </result>
   </test-case>

   <test-case name="error-3000a">
      <description>Error: It is a static error if no package matching the package name and version specified
                  in an xsl:use-package declaration can be located.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error002"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3000a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3000"/>
      </result>
   </test-case>

   <test-case name="error-3010a">
      <description>Error: It is a static error if the exposed visibility of a component is inconsistent
                        with its potential visibility, as defined in the above table, unless the token that
                        matches the component is a wildcard, in which case it is treated as not matching that component.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3010a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3010"/>
      </result>
   </test-case>

   <test-case name="error-3020a">
      <description>Error: It is a static error if an xsl:expose element matches no
                        components in the containing package, unless the tokens in the names
                        attribute are all wildcards.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3020a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3020"/>
      </result>
   </test-case>

   <test-case name="error-3030a">
      <description>Error: It is a static error 
                        if an xsl:accept element matches no
                        components in the used package, unless the tokens in its names attribute
                        are all wildcards.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error002"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3030a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3030"/>
      </result>
   </test-case>

   <test-case name="error-3040a">
      <description>Error: It is a static error 
                        if the visibility assigned to a component
                        by an xsl:accept element is incompatible with the
                        visibility of the corresponding component in the used package, as defined
                        by the above table, unless the token that matches the component name is a wildcard,
                        in which case the xsl:accept element is treated as not matching
                        that component.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error002"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3040a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3040"/>
      </result>
   </test-case>

   <test-case name="error-3050a">
      <description>Error: It is a static error 
                        if the xsl:use-package elements in a
                        package manifest cause two or more homonymous 
                        components to be accepted with a visibility other than hidden.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error003"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3050a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3050"/>
      </result>
   </test-case>
   
   <test-case name="error-3051a">
      <description>[ERR XTSE3051] It is a static error if a token in the names attribute of xsl:accept, 
         other than a wildcard, matches the symbolic name of a component declared within 
         an xsl:override child of the same xsl:use-package element.</description>
      <created by="Michael Kay" on="2017-07-07"/>
      <environment ref="error003"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3051a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3051"/>
      </result>
   </test-case>

   <test-case name="error-3051b">
      <description>[ERR XTSE3051] It is a static error if a token in the names attribute of xsl:accept, 
         other than a wildcard, matches the symbolic name of a component declared within 
         an xsl:override child of the same xsl:use-package element.</description>
      <created by="Michael Kay" on="2017-07-07"/>
      <environment ref="error003"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3051b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3051"/>
      </result>
   </test-case>
   
   <test-case name="error-3052a">
      <description>Error: It is a dynamic error 
                              if an invocation of an absent component (that is, an abstract component accepted
                              into a using package with visibility="absent") is evaluated.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2018-09-25" change="visibility='absent' no longer exists; replaced by nearest equivalent"/>
      <environment ref="error004"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3052a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0650"/>
      </result>
   </test-case>

   <test-case name="error-3055a">
      <description>Error: It is a static error 
                        if a component declaration appearing as a child of xsl:override
                        is homonymous with
                        any other declaration in the using package, regardless of 
                        import precedence, including any other
                        overriding declaration in the package manifest of the using package.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error002"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3055a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3055"/>
      </result>
   </test-case>

   <test-case name="error-3058a">
      <description>Error: It is a static error 
                        if a component declaration appearing as a child of xsl:override
                        does not match (is not homonymous with)
                        some component in the used package.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error002"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3058a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3058"/>
      </result>
   </test-case>

   <test-case name="error-3060a">
      <description>Error: It is a static error 
                        if the component referenced by an xsl:override
                        declaration has visibility
                        other than public or abstract</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error002"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3060a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3060"/>
      </result>
   </test-case>

   <test-case name="error-3070a">
      <description>Error: It is a static error 
                        if the signature of an overriding component is not 
                        compatible with the signature of the component that
                        it is overriding.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error002"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3070a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3070"/>
      </result>
   </test-case>

   <test-case name="error-3080a">
      <description>Error: It is a static error 
                        if a top-level package intended for execution (as distinct from a library
                        package) contains symbolic references
                        referring to components whose visibility is abstract.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3080a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3080"/>
      </result>
   </test-case>

   <test-case name="error-3085a">
      <description>Error: It is a static error, unless the value
                              of the declared-modes attribute of an xsl:package
                              element is no, if the mode attribute of
                              an xsl:template or xsl:apply-templates instruction
                              within the package contains, either explicitly or implicitly (for example, by virtue of a relevant default-mode
                              attribute), a mode name that is not the subject of an xsl:mode declaration
                              appearing within the package nor a public or final xsl:mode
                              declaration accepted from a used package. For this purpose the unnamed mode
                              behaves in the same way as a named mode, so that a reference to the unnamed mode is allowed
                              only if the unnamed mode is declared.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3085a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3085"/>
      </result>
   </test-case>

   <test-case name="error-3090a">
      <description>Error: It is a type error if the xsl:context-item
                  child of xsl:template specifies that a context item is required and none is supplied
                  by the caller, that is, if the context item is absent at the point where xsl:call-template
                  is evaluated.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3090a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3090"/>
      </result>
   </test-case>

   <test-case name="error-3100a">
      <description>Error: It is a type error if an
                        xsl:apply-templates instruction in a particular mode
                        selects an element or attribute whose type is xs:untyped or
                        xs:untypedAtomic when the typed attribute of that
                        mode specifies the value yes, strict, or lax.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-3100a.xsl"/>
      </test>
      <result>
         <error code="XTTE3100"/>
      </result>
   </test-case>

   <test-case name="error-3105a">
      <description>Error: It is a static error if 
                        a template rule applicable to a mode that is defined with typed="strict"
                        uses a match pattern that contains a RelativePathExprP
                        whose first StepExprP is an AxisStepP whose ForwardStepP
                        uses an axis whose principal node kind is Element and whose NodeTest
                        is an EQName that does not correspond to the name of any global element declaration
                        in the in-scope schema components.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-3105a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3105"/>
      </result>
   </test-case>

   <test-case name="error-3110a">
      <description>Error: It is a type error if an
                        xsl:apply-templates instruction in a particular mode
                        selects an element or attribute whose type is anything other than xs:untyped or
                        xs:untypedAtomic when the typed attribute of that
                        mode specifies the value no.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware"/>
      </dependencies>
      <test>
         <stylesheet file="error-3110a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3110"/>
      </result>
   </test-case>

   <test-case name="error-3120a">
      <description>Error: It is a static error if an
                        xsl:break or xsl:next-iteration element
                     appears other than in a tail position
                     within the sequence constructor forming the body of an xsl:iterate
                     instruction.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3120a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3120"/>
      </result>
   </test-case>

   <test-case name="error-3125a">
      <description>Error: It is a static error if the
                     select attribute of xsl:break or xsl:on-completion is present and the
                     instruction has children.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3125a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3125"/>
      </result>
   </test-case>
   
   <test-case name="error-3125b">
      <description>Error: It is a static error if the
                     select attribute of xsl:break or xsl:on-completion is present and the
                     instruction has children.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3125b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3125"/>
      </result>
   </test-case>

   <test-case name="error-3130a">
      <description>Error: It is a static error if the
                        name attribute of an xsl:with-param child of
                     an xsl:next-iteration element does not match the
                        name attribute of an xsl:param child of the
                        innermost containing
                        xsl:iterate instruction.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3130a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3130"/>
      </result>
   </test-case>

   <test-case name="error-3140a">
      <description>Error: It is a static error if the
                        select attribute of the xsl:try element is
                     present and the element has children other than xsl:catch and
                        xsl:fallback elements.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3140a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3140"/>
      </result>
   </test-case>

   <test-case name="error-3150a">
      <description>Error: It is a static error if the
                        select attribute of the xsl:catch element is
                     present unless the element has empty content.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3150a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3150"/>
      </result>
   </test-case>
   
   <test-case name="error-3155a">
      <description>[ERR XTSE3155] It is a static error if an xsl:function element
    with no xsl:param children has a streamability attribute with any
    value other than unclassified.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2017-07-06" change="add streaming dependency (otherwise a different error code is allowed)"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="error-3155a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3155"/>
      </result>
   </test-case>
   
   <test-case name="error-3160a">
      <description>Error: It is a non-recoverable dynamic
                        error if the target expression
                     of an xsl:evaluate instruction is
                     not a valid XPath 3.0 expression (that is, if a static error occurs when
                     analyzing the string according to the rules of the XPath 3.0
                     specification).</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3160a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3160"/>
      </result>
   </test-case>

   <test-case name="error-3170a">
      <description>Error: It is a type error if the
                                 result of evaluating the namespace-context attribute
                                 of the xsl:evaluate instruction is anything other
                                 than a single node.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3170a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3170"/>
      </result>
   </test-case>

   <test-case name="error-3175a">
      <description>Error: It is a dynamic error 
               if an xsl:evaluate
               instruction is evaluated when use of xsl:evaluate is disabled.
            </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Bug 28423, test needed to be implemented, added dependency on dynamic-evaluation"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="dynamic_evaluation" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-3175a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3175"/>
      </result>
   </test-case>

   <test-case name="error-3180a">
      <description>Error: It is a type error if the result of
                        evaluating the select expression of the
                              xsl:copy element is a sequence of more
                        than one item.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3180a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3180"/>
      </result>
   </test-case>

   <test-case name="error-3185a">
      <description>Error: It is a static error if the
                     select attribute of xsl:sequence is present and the
                     instruction has children other than xsl:fallback.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3185a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3185"/>
      </result>
   </test-case>
   
   <test-case name="error-3190a">
      <description>Error: It is a static error if two sibling
                    xsl:merge-source elements have the same name, whether
                    explicit or implicit.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3190a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3190"/>
      </result>
   </test-case>

   <test-case name="error-3195a">
      <description>The two attributes for-each-item and
               for-each-source are mutually exclusive. 
               The xsl:merge-source element may contain
               either or neither, but not both. It is a static error if both are present.
               
      </description>
      <created by="Michael Kay" on="2014-09-12"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3195a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3195"/>
      </result>
   </test-case>
   
   <!-- 3195b is no longer an error -->
   <!--<test-case name="error-3195b">
      <description>The two attributes for-each-item and
               for-each-source are mutually exclusive. 
               The xsl:merge-source element may contain
               either or neither, but not both. It is a static error if both are present.
               
      </description>
      <created by="Michael Kay" on="2014-09-12"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3195b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3195"/>
      </result>
   </test-case>-->

   <test-case name="error-3200a">
      <description>Error: It is a static error if an
                        xsl:merge-key element with a select attribute
                     has non-empty content.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3200a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3200"/>
      </result>
   </test-case>

   <test-case name="error-3210a">
      <description>Error: If the result of evaluating the 
                     context-item expression of an xsl:evaluate instruction
                  is a sequence containing more than one item, then a type error
                   is signaled.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3210a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3210"/>
      </result>
   </test-case>

   <test-case name="error-3240a">
      <description>Error: It is a non-recoverable dynamic error if the value of
               $input does not conform to the JSON grammar.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Debbie Lockett" on="2015-08-12" change="Error code change"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3240a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FOJS0001"/>
      </result>
   </test-case>

   <test-case name="error-3245a">
      <description>
         Error: It is a dynamic error if the value of the validate option is true 
         and the processor is not schema-aware.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Expected error was XTDE3240, but should be XTDE3245 (as in descr of test)" />
      <modified by="Debbie Lockett" on="2015-08-12" change="Error code change"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="schema_aware" satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-3245a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FOJS0004"/>
      </result>
   </test-case>

   <test-case name="error-3250a">
      <description>Use of the replacement character when $input contains an escaped character
         which is not valid in the version of XML supported by the implementation, escape=false
         (by default), and no fallback function is given.
         
         Previously:
         Error: It is a non-recoverable dynamic
               error if the value of
               $input contains an escaped representation of a character (or codepoint)
            that is not a valid character in the version of XML supported by the implementation,
            unless the unescape option is set to false.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Debbie Lockett" on="2015-08-12" change="No longer an error, use default escape=false and replacement char"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3250a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <all-of>
            <assert>out/* instance of element(Q{http://www.w3.org/2005/xpath-functions}array)</assert>
            <assert>out//Q{http://www.w3.org/2005/xpath-functions}string = 'xx&#xFFFD;xx'</assert>
         </all-of>
         <!--<error code="XTDE3250"/>-->
      </result>
   </test-case>

   <test-case name="error-3255a">
      <description>Error: It is a dynamic error if the value of
                  $options includes an entry whose key is indent, 
                     validate, escape, or fallback,
                     and whose value is not a permitted value for that key.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Fixed typo, as='element' into as='element()'"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change resulting from bug 28174"/>
      <modified by="Debbie Lockett" on="2015-08-12" change="Error code change - the value is the wrong type"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3255a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="error-3260a">
      <description>Error: It is a non-recoverable dynamic
               error if the value of
               $options includes an entry whose key is "liberal" and whose value is not
               a single xs:boolean, or an entry whose key is "escape" and whose value
            is not a single xs:boolean.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Debbie Lockett" on="2015-08-12" change="Error code change; change keywords unescape->escape, spec->liberal"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3260a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="error-3265a">
      <description>Error: It is a dynamic error if the value of
                  $input is not valid according to the schema for the XML representation of
                  JSON.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Fixed typo, as='element' into as='element()'"/>
      <modified by="Michael Kay" on="2015-06-23" change="Namespace change resulting from bug 28174"/>
      <modified by="Debbie Lockett" on="2015-08-12" change="Error code change"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3265a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="FOJS0006"/>
      </result>
   </test-case>

   <test-case name="error-3280a">
      <description>Error: It is a static error if the
                        select attribute of the xsl:map-entry element
                        is present unless the element has has no children other than xsl:fallback elements.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3280a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3280"/>
      </result>
   </test-case>

   <test-case name="error-3340a">
      <description>Error: It is a dynamic error if the value of the first
                   argument to the accumulator-before or
                   accumulator-after function is not a valid
                   EQName, or if there is no namespace declaration in scope
                   for the prefix of the QName, or if the name obtained by expanding the QName is not
                   the same as the expanded name of any xsl:accumulator declaration
                   visible in the package in which the function
                   call appears. If the processor is able to detect the error statically (for
                   example, when the argument is supplied as a string literal), then the processor
                   may optionally signal this as a static error.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3340a.xsl"/>
         <param name="n" select="'1234'"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3340"/>
      </result>
   </test-case>
   
   <test-case name="error-3340b">
      <description>See error-3340a</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3340a.xsl"/>
         <param name="n" select="'x:yyy'"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3340"/>
      </result>
   </test-case>
   
   <test-case name="error-3340c">
      <description>See error-3340a</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3340a.xsl"/>
         <param name="n" select="'unknown'"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3340"/>
      </result>
   </test-case>
   
   <test-case name="error-3340d">
      <description>Error: It is a dynamic error if the value of the first
                   argument to the accumulator-before or
                   accumulator-after function is not a valid
                   EQName, or if there is no namespace declaration in scope
                   for the prefix of the QName, or if the name obtained by expanding the QName is not
                   the same as the expanded name of any xsl:accumulator declaration
                   visible in the package in which the function
                   call appears. If the processor is able to detect the error statically (for
                   example, when the argument is supplied as a string literal), then the processor
                   may optionally signal this as a static error.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3340d.xsl"/>        
         <param name="n" select="'1234'"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3340"/>
      </result>
   </test-case>
   
   <test-case name="error-3340e">
      <description>See error-3340a</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3340d.xsl"/>
         <param name="n" select="'x:yyy'"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3340"/>
      </result>
   </test-case>
   
   <test-case name="error-3340f">
      <description>See error-3340a</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3340d.xsl"/>
         <param name="n" select="'unknown'"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3340"/>
      </result>
   </test-case>


   <test-case name="error-3350a">
      <description>Error: It is a static error for a package to contain two or more non-hidden accumulators 
      with the same expanded QName and the same import precedence, unless there is another accumulator with 
      the same expanded QName, and a higher import precedence.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3350a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3350"/>
      </result>
   </test-case>

   <test-case name="error-3360a">
      <description>Error: It is a type error to call the
                     accumulator-before or
                     accumulator-after function when the context item is not a node, or when it is an attribute or namespace
                  node.It is a static error for a package to contain a non-hidden accumulator
                  if either the pre-descent or post-descent functions have the same name
                  as a non-hidden stylesheet function in the same package.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3360a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3360"/>
      </result>
   </test-case>
   
   <test-case name="error-3360b">
      <description>Error: It is a type error to call the
                     accumulator-before or
                     accumulator-after function when the context item is not a node, or when it is an attribute or namespace
                  node.It is a static error for a package to contain a non-hidden accumulator
                  if either the pre-descent or post-descent functions have the same name
                  as a non-hidden stylesheet function in the same package.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3360b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3360"/>
      </result>
   </test-case>
   
   <test-case name="error-3360c">
      <description>Error: It is a type error to call the
                     accumulator-before or
                     accumulator-after function when the context item is not a node, or when it is an attribute or namespace
                  node.It is a static error for a package to contain a non-hidden accumulator
                  if either the pre-descent or post-descent functions have the same name
                  as a non-hidden stylesheet function in the same package.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3360c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3360"/>
      </result>
   </test-case>
   
   <test-case name="error-3362a">
      <description>It is a dynamic error if the accumulator-before or accumulator-after function is called when the 
      context item is a node in a streamed document, unless the selected accumulator is declared with streamable="yes".
      </description>
      <created by="Michael Kay" on="2014-09-15"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3362a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3362"/>
      </result>
   </test-case>
   
   <test-case name="error-3362b">
      <description>It is a dynamic error if the accumulator-before or accumulator-after function is called when the 
      context item is a node in a streamed document, unless the selected accumulator is declared with streamable="yes".
      </description>
      <created by="Michael Kay" on="2014-09-15"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3362b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3362"/>
      </result>
   </test-case>

   <test-case name="error-3365a">
      <description>Error: A dynamic error 
                  occurs if the set of keys in the maps resulting from 
                  evaluating the sequence constructor within an xsl:map instruction contains duplicates.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3365a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3365"/>
      </result>
   </test-case>

   <test-case name="error-3368a">
      <description>(At one time the spec said) a dynamic error 
               occurs if the set of keys in a map produced by the
               evaluation of any expression or instruction contains an instance of any of the types xs:dateTime, xs:date, xs:time, xs:gYear
               xs:gYearMonth, xs:gMonth, xs:gMonthDay, or xs:gDay having a timezone and
               also contains an instance of any of these types having no timezone.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2015-08-12" change="the spec has changed."/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3368a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert>/out = '2'</assert>
      </result>
   </test-case>

   <test-case name="error-3370a">
      <description>
         Raise XTSE0090 if the visibility attribute is present on an xsl:param
         
         In previous drafts, XTSE3370 was the error:
            "It is a static error if the visibility attribute of a stylesheet parameter 
            that specifies required="yes" and does not specify static="yes" is present with a value other 
            than public, final, or abstract, or if an xsl:expose or xsl:accept declaration attempts to modify 
            the visibility of such a component to a value other than public, final, or abstract."
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-03-28" change="Bug 28358, error does not exist anymore"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3370a.xsl"/>
         <param name="p" select="22"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE0090"/>
      </result>
   </test-case>

   <test-case name="error-3375a">
      <description>Error: A type error  occurs if the result of 
                  evaluating the sequence constructor within an xsl:map instruction is not an instance
               of the required type map(*)*.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3375a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTTE3375"/>
      </result>
   </test-case>

   <test-case name="error-3380a">
      <description>(At one time the spec said:) 
      Error: If the accumulator is declared with the attribute streamable="yes"
                  then it is a dynamic error if the accumulator-before or
                  accumulator-after function is called unless the evaluation
                  is performed in the course of the evaluation of either (a) the
                  sequence constructor contained in a template rule invoked in a mode 
                  declared with streamable="yes", or (b) the
                  sequence constructor contained in an xsl:stream instruction, or
                  both. Call the nearest such construct in the chain of causation the
                  controlling sequence constructor.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2015-08-25" change="spec change: no longer an error"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3380a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert>/out = '1'</assert>
      </result>
   </test-case>
   
   <!-- Test deleted because the error no longer exists. MHK 2017-02-22 -->

   <!--<test-case name="error-3390a">
      <description>Error: If the accumulator is declared with the attribute streamable="yes"
                  then it is a dynamic error if the
                     accumulator-before or
                     accumulator-after function is called unless the context
                  item at the point of evaluating this function is the same node as the context item
                  for the evaluation of the controlling sequence constructor.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3390a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3390"/>
      </result>
   </test-case>-->

   <test-case name="error-3400a">
      <description>Error: It is a dynamic error if the
                     accumulator-before or
                     accumulator-after function for an accumulator A
                  is evaluated in the course of evaluating the select
                  expression or contained sequence constructor of any accumulator rule for the same accumulator A.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <detect_accumulator_cycles/>
      </dependencies>
      <test>
         <stylesheet file="error-3400a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3400"/>
      </result>
   </test-case>

   <test-case name="error-3410a">
      <description>Circular accumulator definition.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2017-02-22" change="change expected error code"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3410a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3400"/>
      </result>
   </test-case>

   <test-case name="error-3420a">
      <description>A call to accumulator-after() is consuming when there are no preceding consuming instructions</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2017-03-29" change="changed error code; XTDE3420 no longer exists"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="error-3420a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>

   <test-case name="error-3430a">
      <description>Error: It is a static error if a package contains a construct that is declared to be 
      streamable but which is not guaranteed-streamable, unless the user has indicated that the processor 
      is to handle this situation by processing the stylesheet without streaming or by making use of 
      processor extensions to the streamability rules where available.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <feature value="streaming"/>
      </dependencies>
      <test>
         <stylesheet file="error-3430a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>

   <test-case name="error-3440a">
      <description>In the case of a template rule (that is, an xsl:template element having a match attribute) 
      appearing as a child of xsl:override, it is a static error if the list of modes in the mode attribute 
      contains #all or #unnamed, or if it contains #default and the default mode is the unnamed mode, or 
      if the mode attribute is omitted when the default mode is the unnamed mode.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2015-08-20" change="Apply declared-modes attribute"/>
      <environment ref="error005"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3440a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3440"/>
      </result>
   </test-case>
   
   <test-case name="error-3440b">
      <description>In the case of a template rule (that is, an xsl:template element having a match attribute) 
      appearing as a child of xsl:override, it is a static error if the list of modes in the mode attribute 
      contains #all or #unnamed, or if it contains #default and the default mode is the unnamed mode, or 
      if the mode attribute is omitted when the default mode is the unnamed mode.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2015-08-20" change="Apply declared-modes attribute"/>
      <environment ref="error005"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3440b.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3440"/>
      </result>
   </test-case>
   
   <test-case name="error-3440c">
      <description>In the case of a template rule (that is, an xsl:template element having a match attribute) 
      appearing as a child of xsl:override, it is a static error if the list of modes in the mode attribute 
      contains #all or #unnamed, or if it contains #default and the default mode is the unnamed mode, or 
      if the mode attribute is omitted when the default mode is the unnamed mode.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2015-08-20" change="Apply declared-modes attribute"/>
      <environment ref="error005"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3440c.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3440"/>
      </result>
   </test-case>
   
   <test-case name="error-3440d">
      <description>In the case of a template rule (that is, an xsl:template element having a match attribute) 
      appearing as a child of xsl:override, it is a static error if the list of modes in the mode attribute 
      contains #all or #unnamed, or if it contains #default and the default mode is the unnamed mode, or 
      if the mode attribute is omitted when the default mode is the unnamed mode.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2015-08-20" change="Apply declared-modes attribute"/>
      <environment ref="error005"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3440d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3440"/>
      </result>
   </test-case>

   <test-case name="error-3450a">
      <description>It is a static error if a variable declared with static="yes" is inconsistent with 
      another static variable of the same name that is declared earlier in stylesheet tree order and 
      that has lower import precedence.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3450a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3450"/>
      </result>
   </test-case>

   <test-case name="error-3460a">
      <description>It is a static error if an xsl:apply-imports element appears in a template rule 
      declared within an xsl:override element. (To invoke the template rule that is being overridden, 
      xsl:next-match should therefore be used.)
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2015-08-20" change="Apply declared-modes attribute"/>
      <environment ref="error005"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3460a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3460"/>
      </result>
   </test-case>

   <test-case name="error-3470a">
      <description>It is a static error if the current-merge-group function is used within a pattern.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3470a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3470"/>
      </result>
   </test-case>

   <test-case name="error-3480a">
      <description>Error: It is a dynamic error if the
                     current-merge-group function is used when the current
                     merge group is absent. The error
                     may be reported statically if it can be detected
                     statically.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3480a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3480"/>
      </result>
   </test-case>

   <test-case name="error-3490a">
      <description>Error: It is a dynamic error if the
                     $source argument of the current-merge-group
                     function does not match the name attribute of any
                     xsl:merge-source element for the current merge operation. The
                     error may be reported statically if it can be detected
                     statically.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3490a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3490"/>
      </result>
   </test-case>

   <test-case name="error-3500a">
      <description>It is a static error if the current-merge-key function is used within a pattern.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3500a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3500"/>
      </result>
   </test-case>

   <test-case name="error-3510a">
      <description>Error: It is a dynamic error if the
                     current-merge-key function is used when the current
                  grouping key is absent, or when it is invoked
                  in the course of evaluating a pattern. The error may be
                  reported statically if it can be detected statically.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3510a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTDE3510"/>
      </result>
   </test-case>

   <test-case name="error-3520a">
      <description>It is a static error if a parameter to xsl:iterate is implicitly mandatory.
      </description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Bug 28424, removed current-merge-group from match attribute, referenced the variable to force the error"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3520a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTSE3520"/>
      </result>
   </test-case>

   <test-case name="error-3530a">
      <description>Error: It is a dynamic error
                     if an xsl:try instruction is unable to recover the state of a final result tree
                     because recovery has been disabled by use of the attribute rollback-output="no".</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Abel Braaksma" on="2015-04-07" change="Bug 28425, rolling back is very implementation dependent, it is possible that the error would be caught properly, also, rolling back is only applicable to streaming"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-3530a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <any-of>
            <error code="XTDE3530"/>
            <assert-xml><![CDATA[<out><c>caught</c></out>]]></assert-xml>
         </any-of>
      </result>
   </test-case>

   <test-case name="error-9000a">
      <description>Error: When a transformation is terminated by use of xsl:message
                     terminate="yes", the effect is the same as when a non-recoverable dynamic error occurs
                  during the transformation. The default error code is
                        XTMM9000; this may be overridden using the
                        error-code attribute of the xsl:message
                     instruction.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="error-9000a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTMM9000"/>
      </result>
   </test-case>

   <test-case name="error-9001a">
      <description>Error: When a transformation is terminated by use of xsl:assert, 
                  the effect is the same as when a non-recoverable dynamic error occurs
                  during the transformation. The default error code is
                     XTMM9001; this may be overridden using the
                     error-code attribute of the xsl:assert
                     instruction.</description>
      <created by="Michael Kay" on="2014-08-25"/>
      <modified by="Michael Kay" on="2015-08-25" change="Enable assertions"/>
      <dependencies>
         <spec value="XSLT30+"/>
         <enable_assertions/>
      </dependencies>
      <test>
         <stylesheet file="error-9001a.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XTMM9001"/>
      </result>
   </test-case>
   
   <test-case name="error-FOAR0001a">
      <description>Test integer division by zero (XPath 2.0). Was error-code-162</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-FOAR0001a.xsl"/>
      </test>
      <result>
         <error code="FOAR0001"/>
      </result>
   </test-case>

   <test-case name="error-FOAR0001b">
      <description>Deeply nested dynamic error. Was error-code-177.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-FOAR0001b.xsl"/>
      </test>
      <result>
         <error code="FOAR0001"/>
      </result>
   </test-case>

   <test-case name="error-FODC0002a">
      <description>test reporting of dynamic errors in a simplified stylesheet. Was error-code-185a</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <ignore_doc_failure satisfied="false"/>
      </dependencies>
      <test>
         <stylesheet file="error-FODC0002a.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="FODC0002"/>
            <error code="FODC0005"/>
         </any-of>
      </result>
   </test-case>
   
   <test-case name="error-FODC0002a-ignore">
      <description>test reporting of dynamic errors in a simplified stylesheet. Was error-code-185b.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
         <ignore_doc_failure satisfied="true"/>
      </dependencies>
      <test>
         <stylesheet file="error-FODC0002a.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root/>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="error-FOER0001a">
      <description>Test error() function with no arguments. Was error-code-164.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-FOER0001a.xsl"/>
      </test>
      <result>
         <error code="FOER0000"/>
      </result>
   </test-case>
   
   <test-case name="error-FORG0001a">
      <description>XPath 2.0: invalid date and time. Was error-code-159.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-FORG0001a.xsl"/>
      </test>
      <result>
         <error code="FORG0001"/>
      </result>
   </test-case>

   <test-case name="error-FORG0006a">
      <description>XPath 2.0: test min/max on a heterogeneous sequence. Was error-code-163</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-FORG0006a.xsl"/>
      </test>
      <result>
         <error code="FORG0006"/>
      </result>
   </test-case>

   <test-case name="error-FORG0006b">
      <description>Test how sum() handles a mixed sequence. Was error-code-167.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-FORG0006b.xsl"/>
      </test>
      <result>
         <error code="FORG0006"/>
      </result>
   </test-case>

   <test-case name="error-FORX0002a">
      <description>tests syntax error in a regular expression. Was error-code-160.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-FORX0002a.xsl"/>
      </test>
      <result>
         <error code="FORX0002"/>
      </result>
   </test-case>

   <test-case name="error-XPDY0002a">
      <description>"." used when undefined - type error detected statically or dynamically. Was error-code-178.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPDY0002a.xsl"/>
      </test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>

   <test-case name="error-XPDY0002b">
      <description>"." used when undefined - type error detected statically or dynamically. Was error-code-179.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPDY0002b.xsl"/>
      </test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>

   <test-case name="error-XPDY0002c">
      <description>error: context item is not set on entry to a stylesheet function. Was error-code-025.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPDY0002c.xsl"/>
      </test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>
   
   <test-case name="error-XPDY0002d">
      <description>Generate error XPDY0002. Was error-code-205.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPDY0002d.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <error code="XPDY0002"/>
      </result>
   </test-case>
   
   <test-case name="error-XPDY0050a">
      <description>Test "treat as" failure on simple values. the next two are known at compile time here 
      are some that aren't known until run-time. Was error-code-155.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPDY0050a.xsl"/>
      </test>
      <result>
         <error code="XPDY0050"/>
      </result>
   </test-case>

   <test-case name="error-XPDY0050b">
      <description>Test "treat as" failure on simple values. here are some that aren't known until run-time. Was error-code-156.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPDY0050b.xsl"/>
      </test>
      <result>
         <error code="XPDY0050"/>
      </result>
   </test-case>

   <test-case name="error-XPDY0050c">
      <description>Test "treat as" cardinality failure on simple values. Was error-code-157.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPDY0050c.xsl"/>
      </test>
      <result>
         <error code="XPDY0050"/>
      </result>
   </test-case>

   <test-case name="error-XPDY0050d">
      <description>Test "treat as" on sequences. treat-as failure: 13th item in list is a string, not a decimal. Was error-code-158.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPDY0050d.xsl"/>
      </test>
      <result>
         <error code="XPDY0050"/>
      </result>
   </test-case>
   
<test-case name="error-XPST0003a">
      <description>Error: XPath syntax. Was error-code-001.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003a.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003b">
      <description>Error: XPath syntax. Was error-code-002.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003b.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003c">
      <description>Error: XPath syntax. Was error-code-003.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003c.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003d">
      <description>Error: XPath syntax unmatched square brackets. Was error-code-004.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003d.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003e">
      <description>Error: XPath syntax unclosed string. Was error-code-005.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003e.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003f">
      <description>Error: XPath syntax. Was error-code-006.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003f.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003g">
      <description>Error: XPath syntax processing instruction must be a QName. Was error-code-008.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003g.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003h">
      <description>Error: XPath syntax unknown axis. Was error-code-009.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003h.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003i">
      <description>Error: XPath syntax needs a space. Was error-code-014.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003i.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003j">
      <description>Error: XPath syntax. Was error-code-015.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003j.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003k">
      <description>Error: XPath syntax. Was error-code-016.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003k.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>
   
   <test-case name="error-XPST0003l">
      <description>Error: XPath syntax. Was error-code-021.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003l.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003m">
      <description>Error: XPath syntax. Was error-code-026.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003m.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003n">
      <description>Error: XPath syntax. Was error-code-027.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003n.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003o">
      <description>Error: XPath syntax not a valid XML Name character. Was error-code-028.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003o.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003p">
      <description>Error: XPath syntax. Was error-code-029.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003p.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003q">
      <description>Error: XPath syntax. Was error-code-030.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003q.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0003r">
      <description>Error: XPath syntax. Was error-code-031.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0003r.xsl"/>
      </test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case>

   <test-case name="error-XPST0008a">
      <description>Error: XPath syntax. Was error-code-013.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0008a.xsl"/>
      </test>
      <result>
         <error code="XPST0008"/>
      </result>
   </test-case>
   
   <test-case name="error-XPST0008b">
      <description>Error: xsl:variable - self-reference. Was error-code-144.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0008b.xsl"/>
      </test>
      <result>
         <error code="XPST0008"/>
      </result>
   </test-case>

   <test-case name="error-XPST0008c">
      <description>Range variable used outside its scope. Was error-code-193.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error152"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0008c.xsl"/>
      </test>
      <result>
         <error code="XPST0008"/>
      </result>
   </test-case>   

   <test-case name="error-XPST0017a">
      <description>Error: XPath syntax. Was error-code-010.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0017a.xsl"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="error-XPST0017b">
      <description>Error: XPath syntax. Was error-code-017.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0017b.xsl"/>
      </test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>

   <test-case name="error-XPST0081a">
      <description>Error: XPath syntax. Was error-code-012.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0081a.xsl"/>
      </test>
      <result>
         <error code="XPST0081"/>
      </result>
   </test-case>  

   <test-case name="error-XPST00081b">
      <description>Error: XPath syntax. Was error-code-022.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0081b.xsl"/>
      </test>
      <result>
         <error code="XPST0081"/>
      </result>
   </test-case>

   <test-case name="error-XPST0081c">
      <description>Error: XPath syntax. Was error-code-023.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0081c.xsl"/>
      </test>
      <result>
         <error code="XPST0081"/>
      </result>
   </test-case>

   <test-case name="error-XPST0081d">
      <description>Error: XPath syntax. Was error-code-024.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPST0081d.xsl"/>
      </test>
      <result>
         <error code="XPST0081"/>
      </result>
   </test-case>      

   <test-case name="error-XPTY0004a">
      <description>Test error() function with a string arguments. Was error-code-165.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0004a.xsl"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="error-XPTY0004b">
      <description>Type error in argument to a function call. Was error-code-168.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0004b.xsl"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="error-XPTY0004c">
      <description>Type error in argument to arithmetic operator. Was error-code-169.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0004c.xsl"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="error-XPTY0004d">
      <description>Type error in equality comparison. Was error-code-170.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0004d.xsl"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="error-XPTY0004e">
      <description>Booleans Test of "=" operator with mixed types String to number comparison is not 
      allowed except in backwards compatibility mode. Was error-code-171.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0004e.xsl"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="error-XPTY0004f">
      <description>"." used when not a node - optionally a static error even though never executed. Was error-code-182.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Abel Braakmsa" on="2015-04-07" change="Bug 28426, the function must be called to raise the error"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0004f.xsl"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>

   <test-case name="error-XPTY0004g">
      <description>Error: XPath syntax. Was error-code-020.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0004g.xsl"/>
      </test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="error-XPTY0019a">
      <description>two range variables, both have the same name this is actually allowed; 
      but $i/@val gives an error because the context item isn't a node. Was error-code-192.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error152"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0019a.xsl"/>
      </test>
      <result>
         <any-of>
            <error code="XPTY0019"/>
            <error code="XPTY0020"/>
         </any-of>
      </result>
   </test-case>

   
   <test-case name="error-XPTY0020a">
      <description>axis step used when context item is not a node - type error detected statically or dynamically.
      Was error-code-180.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0020a.xsl"/>
      </test>
      <result>
         <error code="XPTY0020"/>
      </result>
   </test-case>

   <test-case name="error-XPTY0020b">
      <description>"." used when not a node - static error even though never executed. Was error-code-183.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <modified by="Abel Braakmsa" on="2015-04-07" change="Bug 28426, the function must be called and the body of analyze-string must be evaluated to raise the error"/>
      <environment ref="error001"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="error-XPTY0020b.xsl"/>
      </test>
      <result>
         <error code="XPTY0020"/>
      </result>
   </test-case>

      

</test-set>