<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="sx-MapExpr">
   
   <description>XPath map{} constructor expression with streaming</description>   
   
   <environment name="sx-MapExpr-A">
     <stylesheet file="sx-MapExpr-A.xsl"/>
   </environment>
   
   <dependencies>
      <spec value="XSLT30+"/>
      <feature value="streaming"/>
   </dependencies>
   
   
   
   <test-case name="sx-MapExpr-001">
      <description>Use MapExpr within xsl:stream</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <environment ref="sx-MapExpr-A"/>
      <test>
         <initial-template name="m-001"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out
   ><book author="Jane Austen"
         title="Pride and Prejudice"
         price="4.95"
         publisher="Modern Library"
   /><book author="Charlotte Brontë"
         title="Wuthering Heights"
         price="6.58"
         publisher="Penguin Classics"
   /><book author="Thomas Hardy"
         title="Tess of the d'Urbervilles"
         price="4.95"
         publisher="Bantam Classics"
   /><book author="Thomas Hardy"
         title="Jude the Obscure"
         price="4.95"
         publisher="Penguin Classics"
   /><book author="Jasper Fforde"
         title="The Big Over Easy"
         price="16.47"
         publisher="Hodder &amp; Stoughton"
   /><book author="Jasper Fforde"
         title="The Eyre Affair"
         price="16.47"
         publisher="Penguin"
/></out>
]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-002">
      <description>Use MapExpr within xsl:stream; map entry values are sequences</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="map:new no longer exists, renamed to map:merge" />
      <environment ref="sx-MapExpr-A"/>
      <test>
         <initial-template name="m-002"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><books 
          authors="Jane Austen Charlotte Brontë Thomas Hardy Thomas Hardy Jasper Fforde Jasper Fforde"
          titles="Pride and Prejudice Wuthering Heights Tess of the d'Urbervilles Jude the Obscure The Big Over Easy The Eyre Affair"
          prices="4.95 6.58 4.95 4.95 16.47 16.47"
          publishers="Modern Library Penguin Classics Bantam Classics Penguin Classics Hodder &amp; Stoughton Penguin"/></out>]]></assert-xml>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-003">
      <description>Use MapExpr within xsl:stream, with computed keys</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="map:new no longer exists, renamed to map:merge" />
      <environment ref="sx-MapExpr-A"/>
      <test>
         <initial-template name="m-003"/>
      </test>
      <result>
         <all-of>
            <assert>/out/book[1]/@author = "Jane Austen"</assert>
            <assert>/out/book[2]/@author = "Charlotte Brontë"</assert>
            <assert>/out/book[1]/@title = "Pride and Prejudice"</assert>
            <assert>/out/book[2]/@title = "Wuthering Heights"</assert>
         </all-of>   
      </result>
   </test-case>  
   
   <test-case name="sx-MapExpr-004">
      <description>Use MapExpr within xsl:stream, compute min and max simultaneously</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="map:new no longer exists, renamed to map:merge" />
      <environment ref="sx-MapExpr-A"/>
      <test>
         <initial-template name="m-004"/>
      </test>
      <result>
         <all-of>
            <assert>/out/min = "4.95"</assert>
            <assert>/out/max = "16.47"</assert>
         </all-of>   
      </result>
   </test-case> 
   
   <test-case name="sx-MapExpr-005">
      <description>Use MapExpr within xsl:stream, map value is empty sequence</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="map:new no longer exists, renamed to map:merge" />
      <environment ref="sx-MapExpr-A"/>
      <test>
         <initial-template name="m-005"/>
      </test>
      <result>
         <all-of>
            <assert>/out/min = "0"</assert>
            <assert>/out/max = "0"</assert>
         </all-of>   
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-006">
      <description>Use MapExpr within xsl:stream, use consuming keys</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="map:new no longer exists, renamed to map:merge" />
      <environment ref="sx-MapExpr-A"/>
      <test>
         <initial-template name="m-006"/>
      </test>
      <result>
         <assert>/out/ok</assert>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-007">
      <description>Streaming MapExpr, error due to duplicate keys</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="map:new no longer exists, renamed to map:merge" />
      <environment ref="sx-MapExpr-A"/>
      <test>
         <initial-template name="m-007"/>
      </test>
      <result>
         <error code="XTDE3365"/>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-008">
      <description>Streaming MapExpr, containing another consuming MapExpr</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="map:new no longer exists, renamed to map:merge" />
      <environment ref="sx-MapExpr-A"/>
      <test>
         <initial-template name="m-008"/>
      </test>
      <result>
         <all-of>
         	<assert>count(/out/book) = 6</assert>
         	<assert>/out/book[1]/@author = "Jane Austen"</assert>
         	<assert>/out/book[1]/@title = "Pride and Prejudice"</assert>
         	<assert>/out/book[6]/@author = "Jasper Fforde"</assert>
         	<assert>/out/book[6]/@outcome = "success"</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-009">
      <description>Streaming MapExpr, error due to duplicate keys</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <modified by="Abel Braaksma" on="2014-10-21" change="map:new no longer exists, renamed to map:merge" />
      <environment ref="sx-MapExpr-A"/>
      <test>
         <initial-template name="m-009"/>
      </test>
      <result>
         <error code="XTTE3375"/>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-050">
      <description>Use MapExpr within xsl:stream (freestanding copy of -001 for diagnostics)</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <test>
         <stylesheet file="sx-MapExpr-050.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>count(out/book) = 6</assert>
            <assert>out/book[1]/@author = "Jane Austen"</assert>
            <assert>out/book[1]/@title = "Pride and Prejudice"</assert>
            <assert>out/book[1]/@price = "4.95"</assert>
            <assert>out/book[1]/@publisher = "Modern Library"</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-101">
      <description>Saxon bug 2972: map expression within xsl:for-each-group</description>
      <created by="Michael Kay after Martin Honnen" on="2016-09-30"/>
      <environment>
         <source role="." file="sx-MapExpr-101.xml" streaming="true"/>
      </environment>
      <test>
         <stylesheet file="sx-MapExpr-101.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/root/section/div[1][h1='heading 1'][count(p)=2]</assert>
            <assert>/root/section/div[2][h1='heading 2'][count(p)=1]</assert>
            <assert>/root/section/h1[.='heading 3']</assert>
            <assert>/root/section/div[3][h1='heading 4'][count(p)=1]</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-102">
      <description>
         Saxon bug 2972: map expression within xsl:for-each-group. 
         Variant of -101 using current-group()[1] in place of "."</description>
      <created by="Michael Kay after Martin Honnen" on="2016-10-10"/>
      <environment>
         <source role="." file="sx-MapExpr-101.xml" streaming="true"/>
      </environment>
      <test>
         <stylesheet file="sx-MapExpr-102.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/root/section/div[1][h1='heading 1'][count(p)=2]</assert>
            <assert>/root/section/div[2][h1='heading 2'][count(p)=1]</assert>
            <assert>/root/section/h1[.='heading 3']</assert>
            <assert>/root/section/div[3][h1='heading 4'][count(p)=1]</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-103">
      <description>
         Saxon bug 2972: map expression within xsl:for-each-group. 
         Variant of -101 using head(current-group()) and tail(current-group())</description>
      <created by="Michael Kay after Martin Honnen" on="2016-10-10"/>
      <environment>
         <source role="." file="sx-MapExpr-101.xml" streaming="true"/>
      </environment>
      <test>
         <stylesheet file="sx-MapExpr-103.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/root/section/div[1][h1='heading 1'][count(p)=2]</assert>
            <assert>/root/section/div[2][h1='heading 2'][count(p)=1]</assert>
            <assert>/root/section/h1[.='heading 3']</assert>
            <assert>/root/section/div[3][h1='heading 4'][count(p)=1]</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-104">
      <description>
         Saxon bug 2972: map expression within xsl:for-each-group. 
         Variant of -101 using [self::x] predicates</description>
      <created by="Michael Kay after Martin Honnen" on="2016-10-10"/>
      <environment>
         <source role="." file="sx-MapExpr-101.xml" streaming="true"/>
      </environment>
      <test>
         <stylesheet file="sx-MapExpr-104.xsl"/>
      </test>
      <result>
         <all-of>
            <assert>/root/section/div[1][h1='heading 1'][count(p)=2]</assert>
            <assert>/root/section/div[2][h1='heading 2'][count(p)=1]</assert>
            <assert>/root/section/h1[.='heading 3']</assert>
            <assert>/root/section/div[3][h1='heading 4'][count(p)=1]</assert>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-901">
      <description>Use MapExpr within xsl:stream, attempt to save streamed nodes in map value</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <test>
         <stylesheet file="sx-MapExpr-901.xsl"/>
         <initial-template name="m-901"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>
   
   <test-case name="sx-MapExpr-902">
      <description>Use MapExpr within xsl:stream, both key and value are consuming</description>
      <created by="Michael Kay" on="2014-01-22"/>
      <test>
         <stylesheet file="sx-MapExpr-902.xsl"/>
         <initial-template name="m-902"/>
      </test>
      <result>
         <error code="XTSE3430"/>
      </result>
   </test-case>  
   

   
</test-set>